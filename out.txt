JavaClassDiagramDrawer initialized
CppClassDiagramDrawer initialized
CodeController set in UmlController
CodeController set in UmlController
Selected language: C++
DEBUG: Starting refresh all
DEBUG: Found 0 header files
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: Starting refresh all
DEBUG: Found 0 header files
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: Starting refresh all
DEBUG: Found 0 header files
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: Starting refresh all
DEBUG: Found 0 header files
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: Starting refresh all
DEBUG: Found 0 header files
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Measurer
DEBUG: Added new class to extracted classes: Measurer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Full declarator text: Measurer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Measurer()
DEBUG: Processing method: ~Measurer
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Measurer()
DEBUG: Checking constructor/destructor: ~Measurer()
DEBUG: Full declarator text: ~Measurer()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Measurer
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Controller
DEBUG: Added new class to extracted classes: Controller
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Full declarator text: Controller()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Controller()
DEBUG: Processing method: ~Controller
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Controller()
DEBUG: Checking constructor/destructor: ~Controller()
DEBUG: Full declarator text: ~Controller()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Controller
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Controller
DEBUG: Added new class to extracted classes: Controller
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Full declarator text: Controller()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setRightMotorPwm(constdoublepwm)
DEBUG: Processing method: setRightMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setRightMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setRightMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setRightMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setRightMotorPwm
DEBUG: Adding operation: setRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setLeftMotorPwm(constdoublepwm)
DEBUG: Processing method: setLeftMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setLeftMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setLeftMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setLeftMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: setLeftMotorPwm
DEBUG: Adding operation: setLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetRightMotorPwm()
DEBUG: Processing method: resetRightMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetRightMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetRightMotorPwm()
DEBUG: NoPointerDeclarator: resetRightMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: resetRightMotorPwm
DEBUG: Adding operation: resetRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetLeftMotorPwm()
DEBUG: Processing method: resetLeftMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetLeftMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetLeftMotorPwm()
DEBUG: NoPointerDeclarator: resetLeftMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: resetLeftMotorPwm
DEBUG: Adding operation: resetLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetWheelsMotorPwm()
DEBUG: Processing method: resetWheelsMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetWheelsMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetWheelsMotorPwm()
DEBUG: NoPointerDeclarator: resetWheelsMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetWheelsMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: resetWheelsMotorPwm
DEBUG: Adding operation: resetWheelsMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stopWheelsMotor()
DEBUG: Processing method: stopWheelsMotor
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: stopWheelsMotor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stopWheelsMotor()
DEBUG: NoPointerDeclarator: stopWheelsMotor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stopWheelsMotor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: stopWheelsMotor
DEBUG: Adding operation: stopWheelsMotor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setArmMotorPwm(constdoublepwm)
DEBUG: Processing method: setArmMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setArmMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setArmMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setArmMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setArmMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: setArmMotorPwm
DEBUG: Adding operation: setArmMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetArmMotorPwm()
DEBUG: Processing method: resetArmMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetArmMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetArmMotorPwm()
DEBUG: NoPointerDeclarator: resetArmMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetArmMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: resetArmMotorPwm
DEBUG: Adding operation: resetArmMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stopArmMotor()
DEBUG: Processing method: stopArmMotor
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: stopArmMotor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stopArmMotor()
DEBUG: NoPointerDeclarator: stopArmMotor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stopArmMotor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: stopArmMotor
DEBUG: Adding operation: stopArmMotor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightMotorPwm()
DEBUG: Processing method: getRightMotorPwm
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getRightMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightMotorPwm()
DEBUG: NoPointerDeclarator: getRightMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getRightMotorPwm
DEBUG: Adding operation: getRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftMotorPwm()
DEBUG: Processing method: getLeftMotorPwm
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getLeftMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftMotorPwm()
DEBUG: NoPointerDeclarator: getLeftMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 12
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getLeftMotorPwm
DEBUG: Adding operation: getLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: limitPwmValue(constdoubleinputPwm)
DEBUG: Processing method: limitPwmValue
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: limitPwmValue(constdoubleinputPwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: limitPwmValue(constdoubleinputPwm)
DEBUG: NoPointerDeclarator: limitPwmValue(constdoubleinputPwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - limitPwmValue
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoubleinputPwm)
DEBUG: Found ParametersAndQualifiers: (constdoubleinputPwm)
DEBUG: Found ParameterDeclarationClause: constdoubleinputPwm
constdoubleinputPwm
DEBUG: Operation added to class. Current operation count: 13
DEBUG: Operation completed: limitPwmValue
DEBUG: Adding operation: limitPwmValue
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Controller
Attributes: 8
Operations: 13
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Timer
DEBUG: Added new class to extracted classes: Timer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Full declarator text: Timer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Timer()
DEBUG: Processing method: ~Timer
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Timer()
DEBUG: Checking constructor/destructor: ~Timer()
DEBUG: Full declarator text: ~Timer()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Timer
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Timer
DEBUG: Added new class to extracted classes: Timer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Full declarator text: Timer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: sleep(intmilliSec=10)
DEBUG: Processing method: sleep
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: sleep(intmilliSec=10)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: sleep(intmilliSec=10)
DEBUG: NoPointerDeclarator: sleep(intmilliSec=10)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - sleep
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intmilliSec=10)
DEBUG: Found ParametersAndQualifiers: (intmilliSec=10)
DEBUG: Found ParameterDeclarationClause: intmilliSec=10
intmilliSec=10
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: sleep
DEBUG: Adding operation: sleep
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: now()
DEBUG: Processing method: now
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: now()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: now()
DEBUG: NoPointerDeclarator: now()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - now
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: now
DEBUG: Adding operation: now
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Timer
Attributes: 1
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Measurer
DEBUG: Added new class to extracted classes: Measurer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Full declarator text: Measurer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getBrightness()
DEBUG: Processing method: getBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: getBrightness
DEBUG: Adding operation: getBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRawColor()
DEBUG: Processing method: getRawColor
DEBUG: Return type: rgb_raw_t
DEBUG: Modifiers: []
DEBUG: Declarator: getRawColor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRawColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getRawColor
DEBUG: Adding operation: getRawColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftCount()
DEBUG: Processing method: getLeftCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getLeftCount
DEBUG: Adding operation: getLeftCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightCount()
DEBUG: Processing method: getRightCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getRightCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getRightCount
DEBUG: Adding operation: getRightCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getArmMotorCount()
DEBUG: Processing method: getArmMotorCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getArmMotorCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getArmMotorCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: getArmMotorCount
DEBUG: Adding operation: getArmMotorCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftButton()
DEBUG: Processing method: getLeftButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: getLeftButton
DEBUG: Adding operation: getLeftButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightButton()
DEBUG: Processing method: getRightButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getRightButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: getRightButton
DEBUG: Adding operation: getRightButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getEnterButton()
DEBUG: Processing method: getEnterButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getEnterButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getEnterButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: getEnterButton
DEBUG: Adding operation: getEnterButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getForwardDistance()
DEBUG: Processing method: getForwardDistance
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getForwardDistance()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getForwardDistance
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: getForwardDistance
DEBUG: Adding operation: getForwardDistance
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getVoltage()
DEBUG: Processing method: getVoltage
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: getVoltage()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getVoltage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: Operation completed: getVoltage
DEBUG: Adding operation: getVoltage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::ColorSensor colorSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::SonarSensor sonarSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Measurer
Attributes: 5
Operations: 11
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Logger
DEBUG: Added new class to extracted classes: Logger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Full declarator text: Logger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Logger()
DEBUG: Processing method: ~Logger
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Logger()
DEBUG: Checking constructor/destructor: ~Logger()
DEBUG: Full declarator text: ~Logger()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Logger
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Logger
DEBUG: Added new class to extracted classes: Logger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Full declarator text: Logger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: log(constchar*logMessage)
DEBUG: Processing method: log
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: log(constchar*logMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - log
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*logMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*logMessage)
DEBUG: Found ParameterDeclarationClause: constchar*logMessage
constchar*logMessage
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: log
DEBUG: Adding operation: log
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logWarning(constchar*warningMessage)
DEBUG: Processing method: logWarning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logWarning(constchar*warningMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logWarning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*warningMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*warningMessage)
DEBUG: Found ParameterDeclarationClause: constchar*warningMessage
constchar*warningMessage
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logWarning
DEBUG: Adding operation: logWarning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logError(constchar*errorMessage)
DEBUG: Processing method: logError
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logError(constchar*errorMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logError
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*errorMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*errorMessage)
DEBUG: Found ParameterDeclarationClause: constchar*errorMessage
constchar*errorMessage
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: logError
DEBUG: Adding operation: logError
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logHighlight(constchar*highlightLog)
DEBUG: Processing method: logHighlight
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logHighlight(constchar*highlightLog)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logHighlight
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*highlightLog)
DEBUG: Found ParametersAndQualifiers: (constchar*highlightLog)
DEBUG: Found ParameterDeclarationClause: constchar*highlightLog
constchar*highlightLog
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: logHighlight
DEBUG: Adding operation: logHighlight
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initLogs()
DEBUG: Processing method: initLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: initLogs
DEBUG: Adding operation: initLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Logger
Attributes: 0
Operations: 7
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: RunLogger
DEBUG: Added new class to extracted classes: RunLogger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Full declarator text: RunLogger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~RunLogger()
DEBUG: Processing method: ~RunLogger
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~RunLogger()
DEBUG: Checking constructor/destructor: ~RunLogger()
DEBUG: Full declarator text: ~RunLogger()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: RunLogger
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StringOperator
DEBUG: Added new class to extracted classes: StringOperator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Full declarator text: StringOperator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~StringOperator()
DEBUG: Processing method: ~StringOperator
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~StringOperator()
DEBUG: Checking constructor/destructor: ~StringOperator()
DEBUG: Full declarator text: ~StringOperator()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StringOperator
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: SystemInfo
DEBUG: Added new class to extracted classes: SystemInfo
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SystemInfo()
DEBUG: Checking constructor/destructor: SystemInfo()
DEBUG: Full declarator text: SystemInfo()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~SystemInfo()
DEBUG: Processing method: ~SystemInfo
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~SystemInfo()
DEBUG: Checking constructor/destructor: ~SystemInfo()
DEBUG: Full declarator text: ~SystemInfo()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: SystemInfo
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: RunLogger
DEBUG: Added new class to extracted classes: RunLogger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Full declarator text: RunLogger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Processing method: addToLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - addToLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParametersAndQualifiers: (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParameterDeclarationClause: int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b
int_Brightness
int_RightPwm
int_LeftPwm
int_r
int_g
int_b
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: addToLogs
DEBUG: Adding operation: addToLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initRunLogs()
DEBUG: Processing method: initRunLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initRunLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initRunLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: initRunLogs
DEBUG: Adding operation: initRunLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: RunLogger
Attributes: 0
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StringOperator
DEBUG: Added new class to extracted classes: StringOperator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *removeEOL(constchar*string)
DEBUG: Processing method: *removeEOL
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: *removeEOL(constchar*string)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *removeEOL(constchar*string)
DEBUG: NoPointerDeclarator: removeEOL(constchar*string)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - removeEOL
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*string)
DEBUG: Found ParametersAndQualifiers: (constchar*string)
DEBUG: Found ParameterDeclarationClause: constchar*string
constchar*string
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: *removeEOL
DEBUG: Adding operation: *removeEOL
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Full declarator text: StringOperator()
DEBUG: Processing parameters
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StringOperator
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Mileage
DEBUG: Added new class to extracted classes: Mileage
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Full declarator text: Mileage()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Mileage()
DEBUG: Processing method: ~Mileage
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Mileage()
DEBUG: Checking constructor/destructor: ~Mileage()
DEBUG: Full declarator text: ~Mileage()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Mileage
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Mileage
DEBUG: Added new class to extracted classes: Mileage
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateWheelMileage(intangle)
DEBUG: Processing method: calculateWheelMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateWheelMileage(intangle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateWheelMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intangle)
DEBUG: Found ParametersAndQualifiers: (intangle)
DEBUG: Found ParameterDeclarationClause: intangle
intangle
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateWheelMileage
DEBUG: Adding operation: calculateWheelMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Processing method: calculateMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intrightAngle,intleftAngle)
DEBUG: Found ParametersAndQualifiers: (intrightAngle,intleftAngle)
DEBUG: Found ParameterDeclarationClause: intrightAngle,intleftAngle
intrightAngle
intleftAngle
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateMileage
DEBUG: Adding operation: calculateMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Full declarator text: Mileage()
DEBUG: Processing parameters
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Mileage
Attributes: 0
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: SpeedCalculator
DEBUG: Added new class to extracted classes: SpeedCalculator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SpeedCalculator()
DEBUG: Checking constructor/destructor: SpeedCalculator()
DEBUG: Full declarator text: SpeedCalculator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~SpeedCalculator()
DEBUG: Processing method: ~SpeedCalculator
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~SpeedCalculator()
DEBUG: Checking constructor/destructor: ~SpeedCalculator()
DEBUG: Full declarator text: ~SpeedCalculator()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: SpeedCalculator
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorJudge()
DEBUG: Checking constructor/destructor: ColorJudge()
DEBUG: Full declarator text: ColorJudge()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~ColorJudge()
DEBUG: Processing method: ~ColorJudge
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~ColorJudge()
DEBUG: Checking constructor/destructor: ~ColorJudge()
DEBUG: Full declarator text: ~ColorJudge()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorJudge
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: SpeedCalculator
DEBUG: Added new class to extracted classes: SpeedCalculator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SpeedCalculator(double_targetSpeed)
DEBUG: Checking constructor/destructor: SpeedCalculator(double_targetSpeed)
DEBUG: Full declarator text: SpeedCalculator(double_targetSpeed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Checking constructor/destructor: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Full declarator text: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_rightTargetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _rightTargetSpeed
DEBUG: Added parameter - _rightTargetSpeed : double
DEBUG: Parameter context: double_leftTargetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _leftTargetSpeed
DEBUG: Added parameter - _leftTargetSpeed : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateRightMotorPwmFromTargetSpeed()
DEBUG: Processing method: calculateRightMotorPwmFromTargetSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateRightMotorPwmFromTargetSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculateRightMotorPwmFromTargetSpeed
DEBUG: Adding operation: calculateRightMotorPwmFromTargetSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: Processing method: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateLeftMotorPwmFromTargetSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Adding operation: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   const double leftTargetSpeed;

DEBUG: Processing member declaration
Found comment line:   Pid rightPid;

DEBUG: Processing member declaration
Found comment line:   Pid leftPid;

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: Processing method: calculateSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: NoPointerDeclarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublediffMileage,doublediffTime)
DEBUG: Found ParametersAndQualifiers: (doublediffMileage,doublediffTime)
DEBUG: Found ParameterDeclarationClause: doublediffMileage,doublediffTime
doublediffMileage
doublediffTime
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: calculateSpeed
DEBUG: Adding operation: calculateSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: SpeedCalculator
Attributes: 17
Operations: 5
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Pid
DEBUG: Added new class to extracted classes: Pid
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Pid()
DEBUG: Checking constructor/destructor: Pid()
DEBUG: Full declarator text: Pid()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Pid()
DEBUG: Processing method: ~Pid
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Pid()
DEBUG: Checking constructor/destructor: ~Pid()
DEBUG: Full declarator text: ~Pid()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Pid
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PidGain
DEBUG: Added new class to extracted classes: PidGain
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Full declarator text: PidGain(double_kp,double_ki,double_kd)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Pid
DEBUG: Added new class to extracted classes: Pid
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Full declarator text: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Parameter context: double_targetValue
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetValue
DEBUG: Added parameter - _targetValue : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Processing method: setPidGain
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setPidGain
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (double_kp,double_ki,double_kd)
DEBUG: Found ParametersAndQualifiers: (double_kp,double_ki,double_kd)
DEBUG: Found ParameterDeclarationClause: double_kp,double_ki,double_kd
double_kp
double_ki
double_kd
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setPidGain
DEBUG: Adding operation: setPidGain
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Processing method: calculatePid
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculatePid
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParametersAndQualifiers: (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParameterDeclarationClause: doublecurrentValue,doubledelta=0.01
doublecurrentValue
doubledelta=0.01
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculatePid
DEBUG: Adding operation: calculatePid
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: PidGain
Attributes: 3
Operations: 1

Class: Pid
Attributes: 5
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Calibrator
DEBUG: Added new class to extracted classes: Calibrator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Full declarator text: Calibrator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Calibrator()
DEBUG: Processing method: ~Calibrator
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Calibrator()
DEBUG: Checking constructor/destructor: ~Calibrator()
DEBUG: Full declarator text: ~Calibrator()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Calibrator
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Calibrator
DEBUG: Added new class to extracted classes: Calibrator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Full declarator text: Calibrator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: waitForStart()
DEBUG: Processing method: waitForStart
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: waitForStart()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - waitForStart
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: waitForStart
DEBUG: Adding operation: waitForStart
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getIsLeftCourse()
DEBUG: Processing method: getIsLeftCourse
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getIsLeftCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getIsLeftCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getIsLeftCourse
DEBUG: Adding operation: getIsLeftCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getTargetBrightness()
DEBUG: Processing method: getTargetBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getTargetBrightness
DEBUG: Adding operation: getTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度

DEBUG: Processing member declaration
Found comment line:   Timer timer;

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: selectAndSetCourse()
DEBUG: Processing method: selectAndSetCourse
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: selectAndSetCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - selectAndSetCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: selectAndSetCourse
DEBUG: Adding operation: selectAndSetCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: measureAndSetTargetBrightness()
DEBUG: Processing method: measureAndSetTargetBrightness
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: measureAndSetTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - measureAndSetTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: measureAndSetTargetBrightness
DEBUG: Adding operation: measureAndSetTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Calibrator
Attributes: 4
Operations: 7
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EtRobocon2024
DEBUG: Added new class to extracted classes: EtRobocon2024
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EtRobocon2024()
DEBUG: Checking constructor/destructor: EtRobocon2024()
DEBUG: Full declarator text: EtRobocon2024()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~EtRobocon2024()
DEBUG: Processing method: ~EtRobocon2024
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~EtRobocon2024()
DEBUG: Checking constructor/destructor: ~EtRobocon2024()
DEBUG: Full declarator text: ~EtRobocon2024()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EtRobocon2024
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EtRobocon2024
DEBUG: Added new class to extracted classes: EtRobocon2024
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: start()
DEBUG: Processing method: start
DEBUG: Return type: void
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: start()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: start()
DEBUG: NoPointerDeclarator: start()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - start
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: start
DEBUG: Adding operation: start
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: sigint(int_)
DEBUG: Processing method: sigint
DEBUG: Return type: void
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: sigint(int_)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: sigint(int_)
DEBUG: NoPointerDeclarator: sigint(int_)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - sigint
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (int_)
DEBUG: Found ParametersAndQualifiers: (int_)
DEBUG: Found ParameterDeclarationClause: int_
int_
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: sigint
DEBUG: Adding operation: sigint
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EtRobocon2024
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster()
DEBUG: Checking constructor/destructor: AreaMaster()
DEBUG: Full declarator text: AreaMaster()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~AreaMaster()
DEBUG: Processing method: ~AreaMaster
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~AreaMaster()
DEBUG: Checking constructor/destructor: ~AreaMaster()
DEBUG: Full declarator text: ~AreaMaster()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaMaster
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~MotionParser()
DEBUG: Processing method: ~MotionParser
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~MotionParser()
DEBUG: Checking constructor/destructor: ~MotionParser()
DEBUG: Full declarator text: ~MotionParser()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: MotionParser
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceStraight
DEBUG: Added new class to extracted classes: DistanceStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceStraight()
DEBUG: Checking constructor/destructor: DistanceStraight()
DEBUG: Full declarator text: DistanceStraight()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~DistanceStraight()
DEBUG: Processing method: ~DistanceStraight
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~DistanceStraight()
DEBUG: Checking constructor/destructor: ~DistanceStraight()
DEBUG: Full declarator text: ~DistanceStraight()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceStraight
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Sleeping
DEBUG: Added new class to extracted classes: Sleeping
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Sleeping()
DEBUG: Checking constructor/destructor: Sleeping()
DEBUG: Full declarator text: Sleeping()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Sleeping()
DEBUG: Processing method: ~Sleeping
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Sleeping()
DEBUG: Checking constructor/destructor: ~Sleeping()
DEBUG: Full declarator text: ~Sleeping()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Sleeping
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Sleeping
DEBUG: Added new class to extracted classes: Sleeping
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Sleeping(intmilliSec)
DEBUG: Checking constructor/destructor: Sleeping(intmilliSec)
DEBUG: Full declarator text: Sleeping(intmilliSec)
DEBUG: Processing parameters
DEBUG: Parameter context: intmilliSec
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: milliSec
DEBUG: Added parameter - milliSec : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int milliSec;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Sleeping
Attributes: 2
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: LineTracing
DEBUG: Added new class to extracted classes: LineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: LineTracing()
DEBUG: Checking constructor/destructor: LineTracing()
DEBUG: Full declarator text: LineTracing()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~LineTracing()
DEBUG: Processing method: ~LineTracing
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~LineTracing()
DEBUG: Checking constructor/destructor: ~LineTracing()
DEBUG: Full declarator text: ~LineTracing()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: LineTracing
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: LineTracing
DEBUG: Added new class to extracted classes: LineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度 0~

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initDistance;      // 実行前の走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: LineTracing
Attributes: 8
Operations: 5
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PwmRotation
DEBUG: Added new class to extracted classes: PwmRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PwmRotation()
DEBUG: Checking constructor/destructor: PwmRotation()
DEBUG: Full declarator text: PwmRotation()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~PwmRotation()
DEBUG: Processing method: ~PwmRotation
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~PwmRotation()
DEBUG: Checking constructor/destructor: ~PwmRotation()
DEBUG: Full declarator text: ~PwmRotation()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: PwmRotation
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CompositeMotion
DEBUG: Added new class to extracted classes: CompositeMotion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Full declarator text: CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~CompositeMotion()
DEBUG: Processing method: ~CompositeMotion
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~CompositeMotion()
DEBUG: Checking constructor/destructor: ~CompositeMotion()
DEBUG: Full declarator text: ~CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CompositeMotion
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing()
DEBUG: Checking constructor/destructor: ColorLineTracing()
DEBUG: Full declarator text: ColorLineTracing()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~ColorLineTracing()
DEBUG: Processing method: ~ColorLineTracing
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~ColorLineTracing()
DEBUG: Checking constructor/destructor: ~ColorLineTracing()
DEBUG: Full declarator text: ~ColorLineTracing()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EdgeChanging
DEBUG: Added new class to extracted classes: EdgeChanging
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EdgeChanging()
DEBUG: Checking constructor/destructor: EdgeChanging()
DEBUG: Full declarator text: EdgeChanging()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~EdgeChanging()
DEBUG: Processing method: ~EdgeChanging
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~EdgeChanging()
DEBUG: Checking constructor/destructor: ~EdgeChanging()
DEBUG: Full declarator text: ~EdgeChanging()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EdgeChanging
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EdgeChanging
DEBUG: Added new class to extracted classes: EdgeChanging
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Full declarator text: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Parameter context: bool_nextEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _nextEdge
DEBUG: Added parameter - _nextEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EdgeChanging
Attributes: 2
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CorrectingRotation
DEBUG: Added new class to extracted classes: CorrectingRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CorrectingRotation()
DEBUG: Checking constructor/destructor: CorrectingRotation()
DEBUG: Full declarator text: CorrectingRotation()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~CorrectingRotation()
DEBUG: Processing method: ~CorrectingRotation
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~CorrectingRotation()
DEBUG: Checking constructor/destructor: ~CorrectingRotation()
DEBUG: Full declarator text: ~CorrectingRotation()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CorrectingRotation
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CorrectingRotation
DEBUG: Added new class to extracted classes: CorrectingRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Checking constructor/destructor: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Full declarator text: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Processing parameters
DEBUG: Parameter context: int_pwm=50
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: int_correctionTolerance=0
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _correctionTolerance
DEBUG: Added parameter - _correctionTolerance : int
DEBUG: Parameter context: COLOR_color=COLOR::YELLOW
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _color
DEBUG: Added parameter - _color : COLOR
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getCorrectionAngle()
DEBUG: Processing method: getCorrectionAngle
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getCorrectionAngle()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getCorrectionAngle()
DEBUG: NoPointerDeclarator: getCorrectionAngle()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getCorrectionAngle
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getCorrectionAngle
DEBUG: Adding operation: getCorrectionAngle
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int correctionAngle = 0;  // 補正角度 0~360

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CorrectingRotation
Attributes: 5
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorDistanceLineTracing
DEBUG: Added new class to extracted classes: ColorDistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing()
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing()
DEBUG: Full declarator text: ColorDistanceLineTracing()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~ColorDistanceLineTracing()
DEBUG: Processing method: ~ColorDistanceLineTracing
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~ColorDistanceLineTracing()
DEBUG: Checking constructor/destructor: ~ColorDistanceLineTracing()
DEBUG: Full declarator text: ~ColorDistanceLineTracing()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorDistanceLineTracing
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ResetWheelsMotorPwm
DEBUG: Added new class to extracted classes: ResetWheelsMotorPwm
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Full declarator text: ResetWheelsMotorPwm()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~ResetWheelsMotorPwm()
DEBUG: Processing method: ~ResetWheelsMotorPwm
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~ResetWheelsMotorPwm()
DEBUG: Checking constructor/destructor: ~ResetWheelsMotorPwm()
DEBUG: Full declarator text: ~ResetWheelsMotorPwm()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ResetWheelsMotorPwm
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceLineTracing
DEBUG: Added new class to extracted classes: DistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceLineTracing()
DEBUG: Checking constructor/destructor: DistanceLineTracing()
DEBUG: Full declarator text: DistanceLineTracing()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~DistanceLineTracing()
DEBUG: Processing method: ~DistanceLineTracing
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~DistanceLineTracing()
DEBUG: Checking constructor/destructor: ~DistanceLineTracing()
DEBUG: Full declarator text: ~DistanceLineTracing()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceLineTracing
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceLineTracing
DEBUG: Added new class to extracted classes: DistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceLineTracing
Attributes: 1
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaBCameraAction
DEBUG: Added new class to extracted classes: AreaBCameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaBCameraAction()
DEBUG: Checking constructor/destructor: AreaBCameraAction()
DEBUG: Full declarator text: AreaBCameraAction()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~AreaBCameraAction()
DEBUG: Processing method: ~AreaBCameraAction
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~AreaBCameraAction()
DEBUG: Checking constructor/destructor: ~AreaBCameraAction()
DEBUG: Full declarator text: ~AreaBCameraAction()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaBCameraAction
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaBCameraAction
DEBUG: Added new class to extracted classes: AreaBCameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Full declarator text: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Processing parameters
DEBUG: Parameter context: int_preTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _preTargetAngle
DEBUG: Added parameter - _preTargetAngle : int
DEBUG: Parameter context: int_prePwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _prePwm
DEBUG: Added parameter - _prePwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Parameter context: int_pwmXr
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwmXr
DEBUG: Added parameter - _pwmXr : int
DEBUG: Parameter context: int_postTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postTargetAngle
DEBUG: Added parameter - _postTargetAngle : int
DEBUG: Parameter context: int_postPwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postPwm
DEBUG: Added parameter - _postPwm : int
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int correctionTolerance = 10;   // 角度補正回頭の補正許容角度

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaBCameraAction
Attributes: 8
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~StopWheelsMotor()
DEBUG: Processing method: ~StopWheelsMotor
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~StopWheelsMotor()
DEBUG: Checking constructor/destructor: ~StopWheelsMotor()
DEBUG: Full declarator text: ~StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Motion
DEBUG: Added new class to extracted classes: Motion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Full declarator text: Motion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Motion()
DEBUG: Processing method: ~Motion
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Motion()
DEBUG: Checking constructor/destructor: ~Motion()
DEBUG: Full declarator text: ~Motion()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Motion
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Motion
DEBUG: Added new class to extracted classes: Motion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Full declarator text: Motion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
Found comment line:  protected:

DEBUG: Processing member declaration
Found comment line:   Logger logger;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Motion
Attributes: 2
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceStraight
DEBUG: Added new class to extracted classes: DistanceStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Checking constructor/destructor: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Full declarator text: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDiatance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDiatance
DEBUG: Added parameter - _targetDiatance : double
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceStraight
Attributes: 1
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Rotation
DEBUG: Added new class to extracted classes: Rotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Rotation()
DEBUG: Checking constructor/destructor: Rotation()
DEBUG: Full declarator text: Rotation()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Rotation()
DEBUG: Processing method: ~Rotation
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Rotation()
DEBUG: Checking constructor/destructor: ~Rotation()
DEBUG: Full declarator text: ~Rotation()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Rotation
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Rotation
DEBUG: Added new class to extracted classes: Rotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Checking constructor/destructor: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Full declarator text: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Processing parameters
DEBUG: Parameter context: int_targetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetAngle
DEBUG: Added parameter - _targetAngle : int
DEBUG: Parameter context: int_pwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Processing method: isMetContCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Found ParametersAndQualifiers: (doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Found ParameterDeclarationClause: doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign
doubletargetLeftDistance
doubletargetRightDistance
intleftSign
intrightSign
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContCondition
DEBUG: Adding operation: isMetContCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   bool isClockwise;  // 回頭方向 true:時計回り, false:反時計回り

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Rotation
Attributes: 4
Operations: 5
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 1
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorStraight
DEBUG: Added new class to extracted classes: ColorStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorStraight()
DEBUG: Checking constructor/destructor: ColorStraight()
DEBUG: Full declarator text: ColorStraight()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~ColorStraight()
DEBUG: Processing method: ~ColorStraight
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~ColorStraight()
DEBUG: Checking constructor/destructor: ~ColorStraight()
DEBUG: Full declarator text: ~ColorStraight()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorStraight
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaACameraAction
DEBUG: Added new class to extracted classes: AreaACameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaACameraAction()
DEBUG: Checking constructor/destructor: AreaACameraAction()
DEBUG: Full declarator text: AreaACameraAction()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~AreaACameraAction()
DEBUG: Processing method: ~AreaACameraAction
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~AreaACameraAction()
DEBUG: Checking constructor/destructor: ~AreaACameraAction()
DEBUG: Full declarator text: ~AreaACameraAction()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaACameraAction
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CameraAction
DEBUG: Added new class to extracted classes: CameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CameraAction()
DEBUG: Checking constructor/destructor: CameraAction()
DEBUG: Full declarator text: CameraAction()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~CameraAction()
DEBUG: Processing method: ~CameraAction
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~CameraAction()
DEBUG: Checking constructor/destructor: ~CameraAction()
DEBUG: Full declarator text: ~CameraAction()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CameraAction
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CameraAction
DEBUG: Added new class to extracted classes: CameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Entering enum specifier
DEBUG: Created enum class: Subject
DEBUG: Added new enum to extracted classes: Subject
DEBUG: Exiting class specifier
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Full declarator text: CameraAction(Subject_subject)
DEBUG: Processing parameters
DEBUG: Parameter context: Subject_subject
DEBUG: Parameter type raw: Subject
DEBUG: Parameter declarator: _subject
DEBUG: Added parameter - _subject : Subject
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: CameraAction
Attributes: 2
Operations: 3

Class: Subject
Attributes: 0
Operations: 0
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Straight
DEBUG: Added new class to extracted classes: Straight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Straight()
DEBUG: Checking constructor/destructor: Straight()
DEBUG: Full declarator text: Straight()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: ~Straight()
DEBUG: Processing method: ~Straight
DEBUG: Return type: 
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Checking constructor/destructor: ~Straight()
DEBUG: Checking constructor/destructor: ~Straight()
DEBUG: Full declarator text: ~Straight()
DEBUG: Processing parameters
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Straight
Attributes: 0
Operations: 2
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Straight
DEBUG: Added new class to extracted classes: Straight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Straight(double_speed)
DEBUG: Checking constructor/destructor: Straight(double_speed)
DEBUG: Full declarator text: Straight(double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initialDistance;  // 初期走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Straight
Attributes: 3
Operations: 5
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ResetWheelsMotorPwm
DEBUG: Added new class to extracted classes: ResetWheelsMotorPwm
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Full declarator text: ResetWheelsMotorPwm()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ResetWheelsMotorPwm
Attributes: 0
Operations: 3
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaACameraAction
DEBUG: Added new class to extracted classes: AreaACameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Checking constructor/destructor: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Full declarator text: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: int_position
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _position
DEBUG: Added parameter - _position : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Parameter context: int_preTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _preTargetAngle
DEBUG: Added parameter - _preTargetAngle : int
DEBUG: Parameter context: int_postTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postTargetAngle
DEBUG: Added parameter - _postTargetAngle : int
DEBUG: Parameter context: int_rotationPwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _rotationPwm
DEBUG: Added parameter - _rotationPwm : int
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int flag;  // 撮影を行うかどうかを確認するフラグ

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaACameraAction
Attributes: 9
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorStraight
DEBUG: Added new class to extracted classes: ColorStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Full declarator text: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorStraight
Attributes: 3
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PwmRotation
DEBUG: Added new class to extracted classes: PwmRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Checking constructor/destructor: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Full declarator text: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Processing parameters
DEBUG: Parameter context: int_targetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetAngle
DEBUG: Added parameter - _targetAngle : int
DEBUG: Parameter context: int_pwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Processing method: isMetContCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Found ParametersAndQualifiers: (doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Found ParameterDeclarationClause: doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign
doubleinitLeftMileage
doubleinitRightMileage
intleftSign
intrightSign
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContCondition
DEBUG: Adding operation: isMetContCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: PwmRotation
Attributes: 0
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorDistanceLineTracing
DEBUG: Added new class to extracted classes: ColorDistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorDistanceLineTracing
Attributes: 4
Operations: 4
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CompositeMotion
DEBUG: Added new class to extracted classes: CompositeMotion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Full declarator text: CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CompositeMotion
Attributes: 0
Operations: 3
DEBUG: Processing C++ file: Measurer.h
DEBUG: Processing C++ file: Controller.h
DEBUG: Processing C++ file: Timer.h
DEBUG: Processing C++ file: Logger.h
DEBUG: Processing C++ file: RunLogger.h
DEBUG: Processing C++ file: StringOperator.h
DEBUG: Processing C++ file: SystemInfo.h
DEBUG: Processing C++ file: Mileage.h
DEBUG: Processing C++ file: SpeedCalculator.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: Processing C++ file: PidGain.h
DEBUG: Processing C++ file: Calibrator.h
DEBUG: Processing C++ file: EtRobocon2024.h
DEBUG: Processing C++ file: Area.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: DistanceStraight.h
DEBUG: Processing C++ file: Sleeping.h
DEBUG: Processing C++ file: LineTracing.h
DEBUG: Processing C++ file: PwmRotation.h
DEBUG: Processing C++ file: CompositeMotion.h
DEBUG: Processing C++ file: ColorLineTracing.h
DEBUG: Processing C++ file: EdgeChanging.h
DEBUG: Processing C++ file: CorrectingRotation.h
DEBUG: Processing C++ file: ColorDistanceLineTracing.h
DEBUG: Processing C++ file: ResetWheelsMotorPwm.h
DEBUG: Processing C++ file: DistanceLineTracing.h
DEBUG: Processing C++ file: AreaBCameraAction.h
DEBUG: Processing C++ file: StopWheelsMotor.h
DEBUG: Processing C++ file: Motion.h
DEBUG: Processing C++ file: Rotation.h
DEBUG: Processing C++ file: ColorStraight.h
DEBUG: Processing C++ file: AreaACameraAction.h
DEBUG: Processing C++ file: CameraAction.h
DEBUG: Processing C++ file: Straight.h
DEBUG: selectedClassName = Measurer
CppModel classes: 40
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 40
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer #90EE90 {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator #ADD8E6 {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 0.0, Y: 0.0
CppModel classes: 40
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
Restored scroll position - X: 0.0, Y: 0.0
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 40
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer #90EE90 {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator #ADD8E6 {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 0.0, Y: 0.0
Restored scroll position - X: 0.0, Y: 0.0
DEBUG: Starting refresh all
DEBUG: Found 34 header files
DEBUG: Processing SystemInfo.h
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Processing ColorLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: selectedClassName = Measurer
CppModel classes: 42
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 42
DEBUG: Processing C++ file: SystemInfo.h
DEBUG: Processing C++ file: ColorLineTracing.h
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer #90EE90 {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator #ADD8E6 {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: Processing C++ file: COMMAND.h
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 6404.0, Y: 120.0
CppModel classes: 42
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
Restored scroll position - X: 6404.0, Y: 120.0
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 42
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer #90EE90 {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator #ADD8E6 {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 6404.0, Y: 120.0
Restored scroll position - X: 6404.0, Y: 120.0
DEBUG: Starting refresh all
DEBUG: Found 35 header files
DEBUG: Processing SystemInfo.h
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Processing ColorLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing StopWheelsMotor.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 1
Operations: 3
DEBUG: Processing Area.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: selectedClassName = COMMAND
CppModel classes: 44
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Subject (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Subject (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 44
DEBUG: Processing C++ file: SystemInfo.h
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND #90EE90 {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser #ADD8E6 {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND #90EE90 {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser #ADD8E6 {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: Processing C++ file: ColorLineTracing.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: StopWheelsMotor.h
DEBUG: Processing C++ file: Area.h
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
CppModel classes: 44
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Subject (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
Restored scroll position - X: 5528.0, Y: 400.0
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
    Motor (COMPOSITION)
      - armMotor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Subject (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 44
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND #90EE90 {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser #ADD8E6 {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction --|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND #90EE90 {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser #ADD8E6 {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
Restored scroll position - X: 5528.0, Y: 400.0
DEBUG: Starting refresh all
DEBUG: Found 36 header files
DEBUG: Processing SystemInfo.h
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Processing ColorLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing StopWheelsMotor.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 1
Operations: 3
DEBUG: Processing Area.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: Processing Logger.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Logger
DEBUG: Added new class to extracted classes: Logger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Full declarator text: Logger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: log(constchar*logMessage)
DEBUG: Processing method: log
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: log(constchar*logMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - log
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*logMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*logMessage)
DEBUG: Found ParameterDeclarationClause: constchar*logMessage
constchar*logMessage
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: log
DEBUG: Adding operation: log
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logWarning(constchar*warningMessage)
DEBUG: Processing method: logWarning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logWarning(constchar*warningMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logWarning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*warningMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*warningMessage)
DEBUG: Found ParameterDeclarationClause: constchar*warningMessage
constchar*warningMessage
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logWarning
DEBUG: Adding operation: logWarning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logError(constchar*errorMessage)
DEBUG: Processing method: logError
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logError(constchar*errorMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logError
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*errorMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*errorMessage)
DEBUG: Found ParameterDeclarationClause: constchar*errorMessage
constchar*errorMessage
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: logError
DEBUG: Adding operation: logError
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logHighlight(constchar*highlightLog)
DEBUG: Processing method: logHighlight
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logHighlight(constchar*highlightLog)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logHighlight
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*highlightLog)
DEBUG: Found ParametersAndQualifiers: (constchar*highlightLog)
DEBUG: Found ParameterDeclarationClause: constchar*highlightLog
constchar*highlightLog
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: logHighlight
DEBUG: Adding operation: logHighlight
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initLogs()
DEBUG: Processing method: initLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: initLogs
DEBUG: Adding operation: initLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Logger
Attributes: 0
Operations: 7
DEBUG: Processing LineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: LineTracing
DEBUG: Added new class to extracted classes: LineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度 0~

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initDistance;      // 実行前の走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: LineTracing
Attributes: 8
Operations: 5
DEBUG: Processing Measurer.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Measurer
DEBUG: Added new class to extracted classes: Measurer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Full declarator text: Measurer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getBrightness()
DEBUG: Processing method: getBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: getBrightness
DEBUG: Adding operation: getBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRawColor()
DEBUG: Processing method: getRawColor
DEBUG: Return type: rgb_raw_t
DEBUG: Modifiers: []
DEBUG: Declarator: getRawColor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRawColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getRawColor
DEBUG: Adding operation: getRawColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftCount()
DEBUG: Processing method: getLeftCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getLeftCount
DEBUG: Adding operation: getLeftCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightCount()
DEBUG: Processing method: getRightCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getRightCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getRightCount
DEBUG: Adding operation: getRightCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getArmMotorCount()
DEBUG: Processing method: getArmMotorCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getArmMotorCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getArmMotorCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: getArmMotorCount
DEBUG: Adding operation: getArmMotorCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftButton()
DEBUG: Processing method: getLeftButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: getLeftButton
DEBUG: Adding operation: getLeftButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightButton()
DEBUG: Processing method: getRightButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getRightButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: getRightButton
DEBUG: Adding operation: getRightButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getEnterButton()
DEBUG: Processing method: getEnterButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getEnterButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getEnterButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: getEnterButton
DEBUG: Adding operation: getEnterButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getForwardDistance()
DEBUG: Processing method: getForwardDistance
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getForwardDistance()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getForwardDistance
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: getForwardDistance
DEBUG: Adding operation: getForwardDistance
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getVoltage()
DEBUG: Processing method: getVoltage
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: getVoltage()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getVoltage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: Operation completed: getVoltage
DEBUG: Adding operation: getVoltage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::ColorSensor colorSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::SonarSensor sonarSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Measurer
Attributes: 5
Operations: 11
DEBUG: Processing EdgeChanging.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EdgeChanging
DEBUG: Added new class to extracted classes: EdgeChanging
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Full declarator text: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Parameter context: bool_nextEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _nextEdge
DEBUG: Added parameter - _nextEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EdgeChanging
Attributes: 2
Operations: 3
DEBUG: Processing DistanceLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceLineTracing
DEBUG: Added new class to extracted classes: DistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceLineTracing
Attributes: 1
Operations: 4
DEBUG: Processing CompositeMotion.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CompositeMotion
DEBUG: Added new class to extracted classes: CompositeMotion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Full declarator text: CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CompositeMotion
Attributes: 0
Operations: 3
DEBUG: Processing CameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CameraAction
DEBUG: Added new class to extracted classes: CameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Entering enum specifier
DEBUG: Created enum class: Subject
DEBUG: Added new enum to extracted classes: Subject
DEBUG: Exiting class specifier
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Full declarator text: CameraAction(Subject_subject)
DEBUG: Processing parameters
DEBUG: Parameter context: Subject_subject
DEBUG: Parameter type raw: Subject
DEBUG: Parameter declarator: _subject
DEBUG: Added parameter - _subject : Subject
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: CameraAction
Attributes: 2
Operations: 3

Class: Subject
Attributes: 0
Operations: 0
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing COLOR.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: selectedClassName = Area
CppModel classes: 47
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
    PidGain (COMPOSITION)
      - pidGain [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    rgb_raw_t (DEPENDENCY_USE)
    ColorSensor (COMPOSITION)
      - colorSensor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 47
DEBUG: Processing C++ file: SystemInfo.h
DEBUG: Processing C++ file: ColorLineTracing.h
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area #90EE90 {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster #ADD8E6 {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" PidGain : #pidGain
LineTracing *-- "1" Timer : #timer
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" Motor : -armMotor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area #90EE90 {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster #ADD8E6 {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: StopWheelsMotor.h
DEBUG: Processing C++ file: Area.h
DEBUG: Processing C++ file: Logger.h
DEBUG: Processing C++ file: LineTracing.h
DEBUG: Processing C++ file: Measurer.h
DEBUG: Processing C++ file: EdgeChanging.h
DEBUG: Processing C++ file: DistanceLineTracing.h
DEBUG: Processing C++ file: CompositeMotion.h
DEBUG: Processing C++ file: CameraAction.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
CppModel classes: 47
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
Restored scroll position - X: 5528.0, Y: 400.0
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
    PidGain (COMPOSITION)
      - pidGain [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    rgb_raw_t (DEPENDENCY_USE)
    ColorSensor (COMPOSITION)
      - colorSensor [1]
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 47
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
enum Area #90EE90 {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster #ADD8E6 {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" PidGain : #pidGain
LineTracing *-- "1" Timer : #timer
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" Motor : -armMotor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" ColorSensor : -colorSensor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction --|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area #90EE90 {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster #ADD8E6 {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
Restored scroll position - X: 5528.0, Y: 400.0
DEBUG: Starting refresh all
DEBUG: Found 37 header files
DEBUG: Processing SystemInfo.h
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Processing ColorLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing StopWheelsMotor.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 1
Operations: 3
DEBUG: Processing Area.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: Processing Logger.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Logger
DEBUG: Added new class to extracted classes: Logger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Full declarator text: Logger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: log(constchar*logMessage)
DEBUG: Processing method: log
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: log(constchar*logMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - log
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*logMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*logMessage)
DEBUG: Found ParameterDeclarationClause: constchar*logMessage
constchar*logMessage
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: log
DEBUG: Adding operation: log
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logWarning(constchar*warningMessage)
DEBUG: Processing method: logWarning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logWarning(constchar*warningMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logWarning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*warningMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*warningMessage)
DEBUG: Found ParameterDeclarationClause: constchar*warningMessage
constchar*warningMessage
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logWarning
DEBUG: Adding operation: logWarning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logError(constchar*errorMessage)
DEBUG: Processing method: logError
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logError(constchar*errorMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logError
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*errorMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*errorMessage)
DEBUG: Found ParameterDeclarationClause: constchar*errorMessage
constchar*errorMessage
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: logError
DEBUG: Adding operation: logError
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logHighlight(constchar*highlightLog)
DEBUG: Processing method: logHighlight
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logHighlight(constchar*highlightLog)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logHighlight
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*highlightLog)
DEBUG: Found ParametersAndQualifiers: (constchar*highlightLog)
DEBUG: Found ParameterDeclarationClause: constchar*highlightLog
constchar*highlightLog
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: logHighlight
DEBUG: Adding operation: logHighlight
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initLogs()
DEBUG: Processing method: initLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: initLogs
DEBUG: Adding operation: initLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Logger
Attributes: 0
Operations: 7
DEBUG: Processing LineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: LineTracing
DEBUG: Added new class to extracted classes: LineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度 0~

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initDistance;      // 実行前の走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: LineTracing
Attributes: 8
Operations: 5
DEBUG: Processing Measurer.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Measurer
DEBUG: Added new class to extracted classes: Measurer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Full declarator text: Measurer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getBrightness()
DEBUG: Processing method: getBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: getBrightness
DEBUG: Adding operation: getBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRawColor()
DEBUG: Processing method: getRawColor
DEBUG: Return type: rgb_raw_t
DEBUG: Modifiers: []
DEBUG: Declarator: getRawColor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRawColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getRawColor
DEBUG: Adding operation: getRawColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftCount()
DEBUG: Processing method: getLeftCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getLeftCount
DEBUG: Adding operation: getLeftCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightCount()
DEBUG: Processing method: getRightCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getRightCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getRightCount
DEBUG: Adding operation: getRightCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getArmMotorCount()
DEBUG: Processing method: getArmMotorCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getArmMotorCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getArmMotorCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: getArmMotorCount
DEBUG: Adding operation: getArmMotorCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftButton()
DEBUG: Processing method: getLeftButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: getLeftButton
DEBUG: Adding operation: getLeftButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightButton()
DEBUG: Processing method: getRightButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getRightButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: getRightButton
DEBUG: Adding operation: getRightButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getEnterButton()
DEBUG: Processing method: getEnterButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getEnterButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getEnterButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: getEnterButton
DEBUG: Adding operation: getEnterButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getForwardDistance()
DEBUG: Processing method: getForwardDistance
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getForwardDistance()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getForwardDistance
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: getForwardDistance
DEBUG: Adding operation: getForwardDistance
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getVoltage()
DEBUG: Processing method: getVoltage
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: getVoltage()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getVoltage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: Operation completed: getVoltage
DEBUG: Adding operation: getVoltage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::ColorSensor colorSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::SonarSensor sonarSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Measurer
Attributes: 5
Operations: 11
DEBUG: Processing EdgeChanging.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EdgeChanging
DEBUG: Added new class to extracted classes: EdgeChanging
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Full declarator text: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Parameter context: bool_nextEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _nextEdge
DEBUG: Added parameter - _nextEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EdgeChanging
Attributes: 2
Operations: 3
DEBUG: Processing DistanceLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceLineTracing
DEBUG: Added new class to extracted classes: DistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceLineTracing
Attributes: 1
Operations: 4
DEBUG: Processing COLOR.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: Processing CompositeMotion.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CompositeMotion
DEBUG: Added new class to extracted classes: CompositeMotion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Full declarator text: CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CompositeMotion
Attributes: 0
Operations: 3
DEBUG: Processing CameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CameraAction
DEBUG: Added new class to extracted classes: CameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Entering enum specifier
DEBUG: Created enum class: Subject
DEBUG: Added new enum to extracted classes: Subject
DEBUG: Exiting class specifier
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Full declarator text: CameraAction(Subject_subject)
DEBUG: Processing parameters
DEBUG: Parameter context: Subject_subject
DEBUG: Parameter type raw: Subject
DEBUG: Parameter declarator: _subject
DEBUG: Added parameter - _subject : Subject
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: CameraAction
Attributes: 2
Operations: 3

Class: Subject
Attributes: 0
Operations: 0
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing COLOR.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: Processing ColorStraight.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorStraight
DEBUG: Added new class to extracted classes: ColorStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Full declarator text: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorStraight
Attributes: 3
Operations: 4
DEBUG: Processing Motion.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Motion
DEBUG: Added new class to extracted classes: Motion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Full declarator text: Motion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
Found comment line:  protected:

DEBUG: Processing member declaration
Found comment line:   Logger logger;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Motion
Attributes: 2
Operations: 3
DEBUG: Processing Calibrator.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Calibrator
DEBUG: Added new class to extracted classes: Calibrator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Full declarator text: Calibrator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: waitForStart()
DEBUG: Processing method: waitForStart
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: waitForStart()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - waitForStart
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: waitForStart
DEBUG: Adding operation: waitForStart
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getIsLeftCourse()
DEBUG: Processing method: getIsLeftCourse
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getIsLeftCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getIsLeftCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getIsLeftCourse
DEBUG: Adding operation: getIsLeftCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getTargetBrightness()
DEBUG: Processing method: getTargetBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getTargetBrightness
DEBUG: Adding operation: getTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度

DEBUG: Processing member declaration
Found comment line:   Timer timer;

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: selectAndSetCourse()
DEBUG: Processing method: selectAndSetCourse
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: selectAndSetCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - selectAndSetCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: selectAndSetCourse
DEBUG: Adding operation: selectAndSetCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: measureAndSetTargetBrightness()
DEBUG: Processing method: measureAndSetTargetBrightness
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: measureAndSetTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - measureAndSetTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: measureAndSetTargetBrightness
DEBUG: Adding operation: measureAndSetTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Calibrator
Attributes: 4
Operations: 7
DEBUG: Processing RunLogger.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: RunLogger
DEBUG: Added new class to extracted classes: RunLogger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Full declarator text: RunLogger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Processing method: addToLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - addToLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParametersAndQualifiers: (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParameterDeclarationClause: int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b
int_Brightness
int_RightPwm
int_LeftPwm
int_r
int_g
int_b
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: addToLogs
DEBUG: Adding operation: addToLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initRunLogs()
DEBUG: Processing method: initRunLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initRunLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initRunLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: initRunLogs
DEBUG: Adding operation: initRunLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: RunLogger
Attributes: 0
Operations: 4
DEBUG: Processing Mileage.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Mileage
DEBUG: Added new class to extracted classes: Mileage
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateWheelMileage(intangle)
DEBUG: Processing method: calculateWheelMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateWheelMileage(intangle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateWheelMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intangle)
DEBUG: Found ParametersAndQualifiers: (intangle)
DEBUG: Found ParameterDeclarationClause: intangle
intangle
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateWheelMileage
DEBUG: Adding operation: calculateWheelMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Processing method: calculateMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intrightAngle,intleftAngle)
DEBUG: Found ParametersAndQualifiers: (intrightAngle,intleftAngle)
DEBUG: Found ParameterDeclarationClause: intrightAngle,intleftAngle
intrightAngle
intleftAngle
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateMileage
DEBUG: Adding operation: calculateMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Full declarator text: Mileage()
DEBUG: Processing parameters
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Mileage
Attributes: 0
Operations: 3
DEBUG: Processing ResetWheelsMotorPwm.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ResetWheelsMotorPwm
DEBUG: Added new class to extracted classes: ResetWheelsMotorPwm
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Full declarator text: ResetWheelsMotorPwm()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ResetWheelsMotorPwm
Attributes: 0
Operations: 3
DEBUG: Processing AreaBCameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaBCameraAction
DEBUG: Added new class to extracted classes: AreaBCameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Full declarator text: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Processing parameters
DEBUG: Parameter context: int_preTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _preTargetAngle
DEBUG: Added parameter - _preTargetAngle : int
DEBUG: Parameter context: int_prePwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _prePwm
DEBUG: Added parameter - _prePwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Parameter context: int_pwmXr
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwmXr
DEBUG: Added parameter - _pwmXr : int
DEBUG: Parameter context: int_postTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postTargetAngle
DEBUG: Added parameter - _postTargetAngle : int
DEBUG: Parameter context: int_postPwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postPwm
DEBUG: Added parameter - _postPwm : int
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int correctionTolerance = 10;   // 角度補正回頭の補正許容角度

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaBCameraAction
Attributes: 8
Operations: 4
DEBUG: Processing PidGain.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PidGain
DEBUG: Added new class to extracted classes: PidGain
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Full declarator text: PidGain(double_kp,double_ki,double_kd)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Pid
DEBUG: Added new class to extracted classes: Pid
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Full declarator text: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Parameter context: double_targetValue
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetValue
DEBUG: Added parameter - _targetValue : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Processing method: setPidGain
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setPidGain
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (double_kp,double_ki,double_kd)
DEBUG: Found ParametersAndQualifiers: (double_kp,double_ki,double_kd)
DEBUG: Found ParameterDeclarationClause: double_kp,double_ki,double_kd
double_kp
double_ki
double_kd
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setPidGain
DEBUG: Adding operation: setPidGain
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Processing method: calculatePid
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculatePid
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParametersAndQualifiers: (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParameterDeclarationClause: doublecurrentValue,doubledelta=0.01
doublecurrentValue
doubledelta=0.01
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculatePid
DEBUG: Adding operation: calculatePid
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: PidGain
Attributes: 3
Operations: 1

Class: Pid
Attributes: 5
Operations: 3
DEBUG: selectedClassName = COLOR
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    Motor (COMPOSITION)
      - rightWheel [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (REALIZATION)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 49
DEBUG: Processing C++ file: SystemInfo.h
DEBUG: Processing C++ file: ColorLineTracing.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: StopWheelsMotor.h
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -armMotor
Measurer *-- "1" Motor : -leftWheel
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR #90EE90 {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge #ADD8E6 {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR #90EE90 {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge #ADD8E6 {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction #ADD8E6 {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation #ADD8E6 {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: Processing C++ file: Area.h
DEBUG: Processing C++ file: Logger.h
DEBUG: Processing C++ file: LineTracing.h
DEBUG: Processing C++ file: Measurer.h
DEBUG: Processing C++ file: EdgeChanging.h
DEBUG: Processing C++ file: DistanceLineTracing.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: Processing C++ file: CompositeMotion.h
DEBUG: Processing C++ file: CameraAction.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: Processing C++ file: ColorStraight.h
DEBUG: Processing C++ file: Motion.h
DEBUG: Processing C++ file: Calibrator.h
DEBUG: Processing C++ file: RunLogger.h
DEBUG: Processing C++ file: Mileage.h
DEBUG: Processing C++ file: ResetWheelsMotorPwm.h
DEBUG: Processing C++ file: AreaBCameraAction.h
DEBUG: Processing C++ file: PidGain.h
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
Restored scroll position - X: 5528.0, Y: 400.0
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Controller (COMPOSITION)
      - controller [1]
    Motion (INHERITANCE)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
    PidGain (DEPENDENCY_PARAMETER)
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    Motor (COMPOSITION)
      - rightWheel [1]
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (DEPENDENCY_PARAMETER)
    Subject (COMPOSITION)
      - subject [1]
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (DEPENDENCY_PARAMETER)
    COLOR (COMPOSITION)
      - targetColor [1]
    Straight (INHERITANCE)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Logger (COMPOSITION)
      - logger [1]
    RunLogger (COMPOSITION)
      - runLogger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - colorXr [1]
    CompositeMotion (REALIZATION)
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
    PidGain (DEPENDENCY_PARAMETER)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (INHERITANCE)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Pid (COMPOSITION)
      - leftPid [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (INHERITANCE)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Timer (COMPOSITION)
      - timer [1]
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -armMotor
Measurer *-- "1" Motor : -leftWheel
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR #90EE90 {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge #ADD8E6 {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR #90EE90 {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge #ADD8E6 {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" Logger : #logger
Motion *-- "1" RunLogger : #runLogger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction #ADD8E6 {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation #ADD8E6 {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation --|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Timer : -timer
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Pid : -leftPid
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction --|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
Restored scroll position - X: 5528.0, Y: 400.0
DEBUG: Starting refresh all
DEBUG: Found 38 header files
DEBUG: Processing SystemInfo.h
DEBUG: Starting C++ code analysis
DEBUG: Completed C++ code analysis
DEBUG: Extracted 0 classes
DEBUG: Processing ColorLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorLineTracing
DEBUG: Added new class to extracted classes: ColorLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorLineTracing(COLOR_targetColor,double_targetSpeed,int_targetBrightness,constPidGain&_gain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_gain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_gain
DEBUG: Added parameter - _gain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorLineTracing
Attributes: 3
Operations: 4
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing StopWheelsMotor.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StopWheelsMotor
DEBUG: Added new class to extracted classes: StopWheelsMotor
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Checking constructor/destructor: StopWheelsMotor()
DEBUG: Full declarator text: StopWheelsMotor()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StopWheelsMotor
Attributes: 1
Operations: 3
DEBUG: Processing PidGain.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PidGain
DEBUG: Added new class to extracted classes: PidGain
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Full declarator text: PidGain(double_kp,double_ki,double_kd)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Pid
DEBUG: Added new class to extracted classes: Pid
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Full declarator text: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Parameter context: double_targetValue
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetValue
DEBUG: Added parameter - _targetValue : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Processing method: setPidGain
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setPidGain
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (double_kp,double_ki,double_kd)
DEBUG: Found ParametersAndQualifiers: (double_kp,double_ki,double_kd)
DEBUG: Found ParameterDeclarationClause: double_kp,double_ki,double_kd
double_kp
double_ki
double_kd
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setPidGain
DEBUG: Adding operation: setPidGain
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Processing method: calculatePid
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculatePid
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParametersAndQualifiers: (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParameterDeclarationClause: doublecurrentValue,doubledelta=0.01
doublecurrentValue
doubledelta=0.01
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculatePid
DEBUG: Adding operation: calculatePid
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: PidGain
Attributes: 3
Operations: 1

Class: Pid
Attributes: 5
Operations: 3
DEBUG: Processing Area.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: Processing Logger.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Logger
DEBUG: Added new class to extracted classes: Logger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Checking constructor/destructor: Logger()
DEBUG: Full declarator text: Logger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: log(constchar*logMessage)
DEBUG: Processing method: log
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: log(constchar*logMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator: log(constchar*logMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - log
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*logMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*logMessage)
DEBUG: Found ParameterDeclarationClause: constchar*logMessage
constchar*logMessage
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: log
DEBUG: Adding operation: log
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logWarning(constchar*warningMessage)
DEBUG: Processing method: logWarning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logWarning(constchar*warningMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator: logWarning(constchar*warningMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logWarning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*warningMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*warningMessage)
DEBUG: Found ParameterDeclarationClause: constchar*warningMessage
constchar*warningMessage
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logWarning
DEBUG: Adding operation: logWarning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logError(constchar*errorMessage)
DEBUG: Processing method: logError
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logError(constchar*errorMessage)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator: logError(constchar*errorMessage)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logError
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*errorMessage)
DEBUG: Found ParametersAndQualifiers: (constchar*errorMessage)
DEBUG: Found ParameterDeclarationClause: constchar*errorMessage
constchar*errorMessage
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: logError
DEBUG: Adding operation: logError
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logHighlight(constchar*highlightLog)
DEBUG: Processing method: logHighlight
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logHighlight(constchar*highlightLog)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator: logHighlight(constchar*highlightLog)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logHighlight
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*highlightLog)
DEBUG: Found ParametersAndQualifiers: (constchar*highlightLog)
DEBUG: Found ParameterDeclarationClause: constchar*highlightLog
constchar*highlightLog
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: logHighlight
DEBUG: Adding operation: logHighlight
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initLogs()
DEBUG: Processing method: initLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator: initLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: initLogs
DEBUG: Adding operation: initLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Logger
Attributes: 0
Operations: 7
DEBUG: Processing LineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: LineTracing
DEBUG: Added new class to extracted classes: LineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: LineTracing(double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度 0~

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initDistance;      // 実行前の走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: LineTracing
Attributes: 8
Operations: 5
DEBUG: Processing Measurer.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Measurer
DEBUG: Added new class to extracted classes: Measurer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Checking constructor/destructor: Measurer()
DEBUG: Full declarator text: Measurer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getBrightness()
DEBUG: Processing method: getBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator: getBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: getBrightness
DEBUG: Adding operation: getBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRawColor()
DEBUG: Processing method: getRawColor
DEBUG: Return type: rgb_raw_t
DEBUG: Modifiers: []
DEBUG: Declarator: getRawColor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator: getRawColor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRawColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getRawColor
DEBUG: Adding operation: getRawColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftCount()
DEBUG: Processing method: getLeftCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator: getLeftCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getLeftCount
DEBUG: Adding operation: getLeftCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightCount()
DEBUG: Processing method: getRightCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getRightCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator: getRightCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getRightCount
DEBUG: Adding operation: getRightCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getArmMotorCount()
DEBUG: Processing method: getArmMotorCount
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getArmMotorCount()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator: getArmMotorCount()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getArmMotorCount
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: getArmMotorCount
DEBUG: Adding operation: getArmMotorCount
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftButton()
DEBUG: Processing method: getLeftButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getLeftButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator: getLeftButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: getLeftButton
DEBUG: Adding operation: getLeftButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightButton()
DEBUG: Processing method: getRightButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getRightButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator: getRightButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: getRightButton
DEBUG: Adding operation: getRightButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getEnterButton()
DEBUG: Processing method: getEnterButton
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getEnterButton()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator: getEnterButton()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getEnterButton
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: getEnterButton
DEBUG: Adding operation: getEnterButton
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getForwardDistance()
DEBUG: Processing method: getForwardDistance
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getForwardDistance()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator: getForwardDistance()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getForwardDistance
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: getForwardDistance
DEBUG: Adding operation: getForwardDistance
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getVoltage()
DEBUG: Processing method: getVoltage
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: getVoltage()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator: getVoltage()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getVoltage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: Operation completed: getVoltage
DEBUG: Adding operation: getVoltage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::ColorSensor colorSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::SonarSensor sonarSensor;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Measurer
Attributes: 5
Operations: 11
DEBUG: Processing EdgeChanging.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EdgeChanging
DEBUG: Added new class to extracted classes: EdgeChanging
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Checking constructor/destructor: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Full declarator text: EdgeChanging(bool&_isLeftEdge,bool_nextEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Parameter context: bool_nextEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _nextEdge
DEBUG: Added parameter - _nextEdge : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EdgeChanging
Attributes: 2
Operations: 3
DEBUG: Processing DistanceLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceLineTracing
DEBUG: Added new class to extracted classes: DistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: DistanceLineTracing(double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceLineTracing
Attributes: 1
Operations: 4
DEBUG: Processing COLOR.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: Processing CompositeMotion.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CompositeMotion
DEBUG: Added new class to extracted classes: CompositeMotion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Checking constructor/destructor: CompositeMotion()
DEBUG: Full declarator text: CompositeMotion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CompositeMotion
Attributes: 0
Operations: 3
DEBUG: Processing CameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CameraAction
DEBUG: Added new class to extracted classes: CameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Entering enum specifier
DEBUG: Created enum class: Subject
DEBUG: Added new enum to extracted classes: Subject
DEBUG: Exiting class specifier
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Checking constructor/destructor: CameraAction(Subject_subject)
DEBUG: Full declarator text: CameraAction(Subject_subject)
DEBUG: Processing parameters
DEBUG: Parameter context: Subject_subject
DEBUG: Parameter type raw: Subject
DEBUG: Parameter declarator: _subject
DEBUG: Added parameter - _subject : Subject
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: CameraAction
Attributes: 2
Operations: 3

Class: Subject
Attributes: 0
Operations: 0
DEBUG: Processing COMMAND.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COMMAND
DEBUG: Added new enum to extracted classes: COMMAND
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: MotionParser
DEBUG: Added new class to extracted classes: MotionParser
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Processing method: createMotions
DEBUG: Return type: std::vector<Motion*>
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator: createMotions(constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - createMotions
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParametersAndQualifiers: (constchar*filePath,inttargetBrightness,bool&isLeftEdge)
DEBUG: Found ParameterDeclarationClause: constchar*filePath,inttargetBrightness,bool&isLeftEdge
constchar*filePath
inttargetBrightness
bool&isLeftEdge
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: createMotions
DEBUG: Adding operation: createMotions
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Checking constructor/destructor: MotionParser()
DEBUG: Full declarator text: MotionParser()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertCommand(char*str)
DEBUG: Processing method: convertCommand
DEBUG: Return type: COMMAND
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertCommand(char*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator: convertCommand(char*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertCommand
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*str)
DEBUG: Found ParametersAndQualifiers: (char*str)
DEBUG: Found ParameterDeclarationClause: char*str
char*str
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertCommand
DEBUG: Adding operation: convertCommand
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertBool(char*command,char*stringParameter)
DEBUG: Processing method: convertBool
DEBUG: Return type: bool
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertBool(char*command,char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator: convertBool(char*command,char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertBool
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*command,char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*command,char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*command,char*stringParameter
char*command
char*stringParameter
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertBool
DEBUG: Adding operation: convertBool
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertSubject(char*stringParameter)
DEBUG: Processing method: convertSubject
DEBUG: Return type: CameraAction::Subject
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertSubject(char*stringParameter)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator: convertSubject(char*stringParameter)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertSubject
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (char*stringParameter)
DEBUG: Found ParametersAndQualifiers: (char*stringParameter)
DEBUG: Found ParameterDeclarationClause: char*stringParameter
char*stringParameter
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertSubject
DEBUG: Adding operation: convertSubject
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: COMMAND
Attributes: 0
Operations: 0

Class: MotionParser
Attributes: 0
Operations: 5
DEBUG: Processing COLOR.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: COLOR with base type: int
DEBUG: Added new enum to extracted classes: COLOR
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Hsv
DEBUG: Added new class to extracted classes: Hsv
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: ColorJudge
DEBUG: Added new class to extracted classes: ColorJudge
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getColor(rgb_raw_tconst&rgb)
DEBUG: Processing method: getColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getColor(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: getColor(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getColor
DEBUG: Adding operation: getColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stringToColor(constchar*str)
DEBUG: Processing method: stringToColor
DEBUG: Return type: COLOR
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: stringToColor(constchar*str)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator: stringToColor(constchar*str)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stringToColor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*str)
DEBUG: Found ParametersAndQualifiers: (constchar*str)
DEBUG: Found ParameterDeclarationClause: constchar*str
constchar*str
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: stringToColor
DEBUG: Adding operation: stringToColor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *colorToString(COLORcolor)
DEBUG: Processing method: *colorToString
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC, READONLY]
DEBUG: Declarator: *colorToString(COLORcolor)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *colorToString(COLORcolor)
DEBUG: NoPointerDeclarator: colorToString(COLORcolor)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - colorToString
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (COLORcolor)
DEBUG: Found ParametersAndQualifiers: (COLORcolor)
DEBUG: Found ParameterDeclarationClause: COLORcolor
COLORcolor
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierSTATIC
DEBUG: ModifierREADONLY
DEBUG: Operation completed: *colorToString
DEBUG: Adding operation: *colorToString
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   static constexpr int BLUE_BORDER = 300;         // 青の色相の境界

DEBUG: Processing member declaration
Found comment line:   static constexpr rgb_raw_t MAX_RGB = { 244, 245, 252 };  // コースが白の時（最大）のRGB値

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Processing method: convertRgbToHsv
DEBUG: Return type: Hsv
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator: convertRgbToHsv(rgb_raw_tconst&rgb)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - convertRgbToHsv
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (rgb_raw_tconst&rgb)
DEBUG: Found ParametersAndQualifiers: (rgb_raw_tconst&rgb)
DEBUG: Found ParameterDeclarationClause: rgb_raw_tconst&rgb
rgb_raw_tconst&rgb
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierSTATIC
DEBUG: Operation completed: convertRgbToHsv
DEBUG: Adding operation: convertRgbToHsv
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 3 classes

Class: COLOR
Attributes: 0
Operations: 0

Class: Hsv
Attributes: 3
Operations: 0

Class: ColorJudge
Attributes: 10
Operations: 4
DEBUG: Processing ColorStraight.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorStraight
DEBUG: Added new class to extracted classes: ColorStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Checking constructor/destructor: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Full declarator text: ColorStraight(COLOR_targetColor,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorStraight
Attributes: 3
Operations: 4
DEBUG: Processing Motion.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Motion
DEBUG: Added new class to extracted classes: Motion
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Checking constructor/destructor: Motion()
DEBUG: Full declarator text: Motion()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
Found comment line:  protected:

DEBUG: Processing member declaration
Found comment line:   Logger logger;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Motion
Attributes: 2
Operations: 3
DEBUG: Processing Calibrator.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Calibrator
DEBUG: Added new class to extracted classes: Calibrator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Checking constructor/destructor: Calibrator()
DEBUG: Full declarator text: Calibrator()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: waitForStart()
DEBUG: Processing method: waitForStart
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: waitForStart()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator: waitForStart()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - waitForStart
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: waitForStart
DEBUG: Adding operation: waitForStart
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getIsLeftCourse()
DEBUG: Processing method: getIsLeftCourse
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: getIsLeftCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator: getIsLeftCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getIsLeftCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: getIsLeftCourse
DEBUG: Adding operation: getIsLeftCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getTargetBrightness()
DEBUG: Processing method: getTargetBrightness
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator: getTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: getTargetBrightness
DEBUG: Adding operation: getTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int targetBrightness;  // 目標輝度

DEBUG: Processing member declaration
Found comment line:   Timer timer;

DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: selectAndSetCourse()
DEBUG: Processing method: selectAndSetCourse
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: selectAndSetCourse()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator: selectAndSetCourse()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - selectAndSetCourse
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: selectAndSetCourse
DEBUG: Adding operation: selectAndSetCourse
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: measureAndSetTargetBrightness()
DEBUG: Processing method: measureAndSetTargetBrightness
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: measureAndSetTargetBrightness()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator: measureAndSetTargetBrightness()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - measureAndSetTargetBrightness
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: measureAndSetTargetBrightness
DEBUG: Adding operation: measureAndSetTargetBrightness
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Calibrator
Attributes: 4
Operations: 7
DEBUG: Processing RunLogger.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: RunLogger
DEBUG: Added new class to extracted classes: RunLogger
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Checking constructor/destructor: RunLogger()
DEBUG: Full declarator text: RunLogger()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Processing method: addToLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator: addToLogs(int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - addToLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParametersAndQualifiers: (int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b)
DEBUG: Found ParameterDeclarationClause: int_Brightness,int_RightPwm,int_LeftPwm,int_r,int_g,int_b
int_Brightness
int_RightPwm
int_LeftPwm
int_r
int_g
int_b
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: addToLogs
DEBUG: Adding operation: addToLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: outputToFile()
DEBUG: Processing method: outputToFile
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: outputToFile()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator: outputToFile()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - outputToFile
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: outputToFile
DEBUG: Adding operation: outputToFile
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: initRunLogs()
DEBUG: Processing method: initRunLogs
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: initRunLogs()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator: initRunLogs()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - initRunLogs
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: initRunLogs
DEBUG: Adding operation: initRunLogs
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: RunLogger
Attributes: 0
Operations: 4
DEBUG: Processing Mileage.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Mileage
DEBUG: Added new class to extracted classes: Mileage
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateWheelMileage(intangle)
DEBUG: Processing method: calculateWheelMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateWheelMileage(intangle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator: calculateWheelMileage(intangle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateWheelMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intangle)
DEBUG: Found ParametersAndQualifiers: (intangle)
DEBUG: Found ParameterDeclarationClause: intangle
intangle
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateWheelMileage
DEBUG: Adding operation: calculateWheelMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Processing method: calculateMileage
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator: calculateMileage(intrightAngle,intleftAngle)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateMileage
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intrightAngle,intleftAngle)
DEBUG: Found ParametersAndQualifiers: (intrightAngle,intleftAngle)
DEBUG: Found ParameterDeclarationClause: intrightAngle,intleftAngle
intrightAngle
intleftAngle
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: calculateMileage
DEBUG: Adding operation: calculateMileage
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Checking constructor/destructor: Mileage()
DEBUG: Full declarator text: Mileage()
DEBUG: Processing parameters
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Mileage
Attributes: 0
Operations: 3
DEBUG: Processing ResetWheelsMotorPwm.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ResetWheelsMotorPwm
DEBUG: Added new class to extracted classes: ResetWheelsMotorPwm
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Checking constructor/destructor: ResetWheelsMotorPwm()
DEBUG: Full declarator text: ResetWheelsMotorPwm()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ResetWheelsMotorPwm
Attributes: 0
Operations: 3
DEBUG: Processing AreaBCameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaBCameraAction
DEBUG: Added new class to extracted classes: AreaBCameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Checking constructor/destructor: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Full declarator text: AreaBCameraAction(int_preTargetAngle,int_prePwm,bool_isClockwise,int_pwmXr,int_postTargetAngle,int_postPwm)
DEBUG: Processing parameters
DEBUG: Parameter context: int_preTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _preTargetAngle
DEBUG: Added parameter - _preTargetAngle : int
DEBUG: Parameter context: int_prePwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _prePwm
DEBUG: Added parameter - _prePwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Parameter context: int_pwmXr
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwmXr
DEBUG: Added parameter - _pwmXr : int
DEBUG: Parameter context: int_postTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postTargetAngle
DEBUG: Added parameter - _postTargetAngle : int
DEBUG: Parameter context: int_postPwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postPwm
DEBUG: Added parameter - _postPwm : int
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int correctionTolerance = 10;   // 角度補正回頭の補正許容角度

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaBCameraAction
Attributes: 8
Operations: 4
DEBUG: Processing PidGain.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PidGain
DEBUG: Added new class to extracted classes: PidGain
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Checking constructor/destructor: PidGain(double_kp,double_ki,double_kd)
DEBUG: Full declarator text: PidGain(double_kp,double_ki,double_kd)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: Pid
DEBUG: Added new class to extracted classes: Pid
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Checking constructor/destructor: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Full declarator text: Pid(double_kp,double_ki,double_kd,double_targetValue)
DEBUG: Processing parameters
DEBUG: Parameter context: double_kp
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kp
DEBUG: Added parameter - _kp : double
DEBUG: Parameter context: double_ki
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _ki
DEBUG: Added parameter - _ki : double
DEBUG: Parameter context: double_kd
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _kd
DEBUG: Added parameter - _kd : double
DEBUG: Parameter context: double_targetValue
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetValue
DEBUG: Added parameter - _targetValue : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Processing method: setPidGain
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator: setPidGain(double_kp,double_ki,double_kd)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setPidGain
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (double_kp,double_ki,double_kd)
DEBUG: Found ParametersAndQualifiers: (double_kp,double_ki,double_kd)
DEBUG: Found ParameterDeclarationClause: double_kp,double_ki,double_kd
double_kp
double_ki
double_kd
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setPidGain
DEBUG: Adding operation: setPidGain
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Processing method: calculatePid
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator: calculatePid(doublecurrentValue,doubledelta=0.01)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculatePid
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParametersAndQualifiers: (doublecurrentValue,doubledelta=0.01)
DEBUG: Found ParameterDeclarationClause: doublecurrentValue,doubledelta=0.01
doublecurrentValue
doubledelta=0.01
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculatePid
DEBUG: Adding operation: calculatePid
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: PidGain
Attributes: 3
Operations: 1

Class: Pid
Attributes: 5
Operations: 3
DEBUG: Processing Controller.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Controller
DEBUG: Added new class to extracted classes: Controller
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Checking constructor/destructor: Controller()
DEBUG: Full declarator text: Controller()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setRightMotorPwm(constdoublepwm)
DEBUG: Processing method: setRightMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setRightMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setRightMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setRightMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: setRightMotorPwm
DEBUG: Adding operation: setRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setLeftMotorPwm(constdoublepwm)
DEBUG: Processing method: setLeftMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setLeftMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setLeftMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setLeftMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: setLeftMotorPwm
DEBUG: Adding operation: setLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetRightMotorPwm()
DEBUG: Processing method: resetRightMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetRightMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetRightMotorPwm()
DEBUG: NoPointerDeclarator: resetRightMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: resetRightMotorPwm
DEBUG: Adding operation: resetRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetLeftMotorPwm()
DEBUG: Processing method: resetLeftMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetLeftMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetLeftMotorPwm()
DEBUG: NoPointerDeclarator: resetLeftMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: resetLeftMotorPwm
DEBUG: Adding operation: resetLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetWheelsMotorPwm()
DEBUG: Processing method: resetWheelsMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetWheelsMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetWheelsMotorPwm()
DEBUG: NoPointerDeclarator: resetWheelsMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetWheelsMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 6
DEBUG: Operation completed: resetWheelsMotorPwm
DEBUG: Adding operation: resetWheelsMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stopWheelsMotor()
DEBUG: Processing method: stopWheelsMotor
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: stopWheelsMotor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stopWheelsMotor()
DEBUG: NoPointerDeclarator: stopWheelsMotor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stopWheelsMotor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 7
DEBUG: Operation completed: stopWheelsMotor
DEBUG: Adding operation: stopWheelsMotor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: setArmMotorPwm(constdoublepwm)
DEBUG: Processing method: setArmMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: setArmMotorPwm(constdoublepwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: setArmMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator: setArmMotorPwm(constdoublepwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - setArmMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoublepwm)
DEBUG: Found ParametersAndQualifiers: (constdoublepwm)
DEBUG: Found ParameterDeclarationClause: constdoublepwm
constdoublepwm
DEBUG: Operation added to class. Current operation count: 8
DEBUG: Operation completed: setArmMotorPwm
DEBUG: Adding operation: setArmMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: resetArmMotorPwm()
DEBUG: Processing method: resetArmMotorPwm
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: resetArmMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: resetArmMotorPwm()
DEBUG: NoPointerDeclarator: resetArmMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - resetArmMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 9
DEBUG: Operation completed: resetArmMotorPwm
DEBUG: Adding operation: resetArmMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: stopArmMotor()
DEBUG: Processing method: stopArmMotor
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: stopArmMotor()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: stopArmMotor()
DEBUG: NoPointerDeclarator: stopArmMotor()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - stopArmMotor
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 10
DEBUG: Operation completed: stopArmMotor
DEBUG: Adding operation: stopArmMotor
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getRightMotorPwm()
DEBUG: Processing method: getRightMotorPwm
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getRightMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getRightMotorPwm()
DEBUG: NoPointerDeclarator: getRightMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getRightMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 11
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getRightMotorPwm
DEBUG: Adding operation: getRightMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getLeftMotorPwm()
DEBUG: Processing method: getLeftMotorPwm
DEBUG: Return type: double
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: getLeftMotorPwm()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getLeftMotorPwm()
DEBUG: NoPointerDeclarator: getLeftMotorPwm()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getLeftMotorPwm
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 12
DEBUG: ModifierSTATIC
DEBUG: Operation completed: getLeftMotorPwm
DEBUG: Adding operation: getLeftMotorPwm
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor rightWheel;

DEBUG: Processing member declaration
Found comment line:   ev3api::Motor leftWheel;

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: limitPwmValue(constdoubleinputPwm)
DEBUG: Processing method: limitPwmValue
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: limitPwmValue(constdoubleinputPwm)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: limitPwmValue(constdoubleinputPwm)
DEBUG: NoPointerDeclarator: limitPwmValue(constdoubleinputPwm)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - limitPwmValue
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constdoubleinputPwm)
DEBUG: Found ParametersAndQualifiers: (constdoubleinputPwm)
DEBUG: Found ParameterDeclarationClause: constdoubleinputPwm
constdoubleinputPwm
DEBUG: Operation added to class. Current operation count: 13
DEBUG: Operation completed: limitPwmValue
DEBUG: Adding operation: limitPwmValue
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Controller
Attributes: 8
Operations: 13
DEBUG: Processing Rotation.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Rotation
DEBUG: Added new class to extracted classes: Rotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Checking constructor/destructor: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Full declarator text: Rotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Processing parameters
DEBUG: Parameter context: int_targetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetAngle
DEBUG: Added parameter - _targetAngle : int
DEBUG: Parameter context: int_pwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Processing method: isMetContCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator: isMetContCondition(doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Found ParametersAndQualifiers: (doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign)
DEBUG: Found ParameterDeclarationClause: doubletargetLeftDistance,doubletargetRightDistance,intleftSign,intrightSign
doubletargetLeftDistance
doubletargetRightDistance
intleftSign
intrightSign
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContCondition
DEBUG: Adding operation: isMetContCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   bool isClockwise;  // 回頭方向 true:時計回り, false:反時計回り

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Rotation
Attributes: 4
Operations: 5
DEBUG: Processing DistanceStraight.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: DistanceStraight
DEBUG: Added new class to extracted classes: DistanceStraight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Checking constructor/destructor: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Full declarator text: DistanceStraight(double_targetDiatance,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetDiatance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDiatance
DEBUG: Added parameter - _targetDiatance : double
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL, OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: DistanceStraight
Attributes: 1
Operations: 4
DEBUG: Processing Area.h
DEBUG: Starting C++ code analysis
DEBUG: Entering enum specifier
DEBUG: Created enum class: Area
DEBUG: Added new enum to extracted classes: Area
DEBUG: Exiting class specifier
DEBUG: Entering class specifier
DEBUG: Created class: AreaMaster
DEBUG: Added new class to extracted classes: AreaMaster
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Checking constructor/destructor: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Full declarator text: AreaMaster(Areaarea,boolisLeftCourse,bool&isLeftEdge,inttargetBrightness)
DEBUG: Processing parameters
DEBUG: Parameter context: Areaarea
DEBUG: Parameter type raw: Area
DEBUG: Parameter declarator: area
DEBUG: Added parameter - area : Area
DEBUG: Parameter context: boolisLeftCourse
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: isLeftCourse
DEBUG: Added parameter - isLeftCourse : bool
DEBUG: Parameter context: bool&isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &isLeftEdge
DEBUG: Added parameter - isLeftEdge : bool
DEBUG: Parameter context: inttargetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: targetBrightness
DEBUG: Added parameter - targetBrightness : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 2 classes

Class: Area
Attributes: 0
Operations: 0

Class: AreaMaster
Attributes: 4
Operations: 2
DEBUG: Processing ColorDistanceLineTracing.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: ColorDistanceLineTracing
DEBUG: Added new class to extracted classes: ColorDistanceLineTracing
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Checking constructor/destructor: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Full declarator text: ColorDistanceLineTracing(COLOR_targetColor,double_targetDistance,double_targetSpeed,int_targetBrightness,constPidGain&_pidGain,bool&_isLeftEdge)
DEBUG: Processing parameters
DEBUG: Parameter context: COLOR_targetColor
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _targetColor
DEBUG: Added parameter - _targetColor : COLOR
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Parameter context: int_targetBrightness
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetBrightness
DEBUG: Added parameter - _targetBrightness : int
DEBUG: Parameter context: constPidGain&_pidGain
DEBUG: Parameter type raw: constPidGain
DEBUG: Parameter declarator: &_pidGain
DEBUG: Added parameter - _pidGain : PidGain
DEBUG: Parameter context: bool&_isLeftEdge
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: &_isLeftEdge
DEBUG: Added parameter - _isLeftEdge : bool
DEBUG: Processing member declaration
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition(doubletargetSpeed)
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition(doubletargetSpeed)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator: isMetPreCondition(doubletargetSpeed)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubletargetSpeed)
DEBUG: Found ParametersAndQualifiers: (doubletargetSpeed)
DEBUG: Found ParameterDeclarationClause: doubletargetSpeed
doubletargetSpeed
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int colorCount = 0;

DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: ColorDistanceLineTracing
Attributes: 4
Operations: 4
DEBUG: Processing Timer.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Timer
DEBUG: Added new class to extracted classes: Timer
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Checking constructor/destructor: Timer()
DEBUG: Full declarator text: Timer()
DEBUG: Processing parameters
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: sleep(intmilliSec=10)
DEBUG: Processing method: sleep
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: sleep(intmilliSec=10)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: sleep(intmilliSec=10)
DEBUG: NoPointerDeclarator: sleep(intmilliSec=10)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - sleep
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (intmilliSec=10)
DEBUG: Found ParametersAndQualifiers: (intmilliSec=10)
DEBUG: Found ParameterDeclarationClause: intmilliSec=10
intmilliSec=10
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: sleep
DEBUG: Adding operation: sleep
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: now()
DEBUG: Processing method: now
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: now()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: now()
DEBUG: NoPointerDeclarator: now()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - now
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: now
DEBUG: Adding operation: now
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
Found comment line:  private:

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Timer
Attributes: 1
Operations: 3
DEBUG: Processing Sleeping.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Sleeping
DEBUG: Added new class to extracted classes: Sleeping
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Sleeping(intmilliSec)
DEBUG: Checking constructor/destructor: Sleeping(intmilliSec)
DEBUG: Full declarator text: Sleeping(intmilliSec)
DEBUG: Processing parameters
DEBUG: Parameter context: intmilliSec
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: milliSec
DEBUG: Added parameter - milliSec : int
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int milliSec;

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Sleeping
Attributes: 2
Operations: 3
DEBUG: Processing CorrectingRotation.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: CorrectingRotation
DEBUG: Added new class to extracted classes: CorrectingRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Checking constructor/destructor: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Full declarator text: CorrectingRotation(int_pwm=50,int_correctionTolerance=0,COLOR_color=COLOR::YELLOW)
DEBUG: Processing parameters
DEBUG: Parameter context: int_pwm=50
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: int_correctionTolerance=0
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _correctionTolerance
DEBUG: Added parameter - _correctionTolerance : int
DEBUG: Parameter context: COLOR_color=COLOR::YELLOW
DEBUG: Parameter type raw: COLOR
DEBUG: Parameter declarator: _color
DEBUG: Added parameter - _color : COLOR
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: getCorrectionAngle()
DEBUG: Processing method: getCorrectionAngle
DEBUG: Return type: int
DEBUG: Modifiers: []
DEBUG: Declarator: getCorrectionAngle()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: getCorrectionAngle()
DEBUG: NoPointerDeclarator: getCorrectionAngle()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - getCorrectionAngle
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: getCorrectionAngle
DEBUG: Adding operation: getCorrectionAngle
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int correctionAngle = 0;  // 補正角度 0~360

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: CorrectingRotation
Attributes: 5
Operations: 4
DEBUG: Processing PwmRotation.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: PwmRotation
DEBUG: Added new class to extracted classes: PwmRotation
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Checking constructor/destructor: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Full declarator text: PwmRotation(int_targetAngle,int_pwm,bool_isClockwise)
DEBUG: Processing parameters
DEBUG: Parameter context: int_targetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _targetAngle
DEBUG: Added parameter - _targetAngle : int
DEBUG: Parameter context: int_pwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _pwm
DEBUG: Added parameter - _pwm : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Processing method: isMetContCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator: isMetContCondition(doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Found ParametersAndQualifiers: (doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign)
DEBUG: Found ParameterDeclarationClause: doubleinitLeftMileage,doubleinitRightMileage,intleftSign,intrightSign
doubleinitLeftMileage
doubleinitRightMileage
intleftSign
intrightSign
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: isMetContCondition
DEBUG: Adding operation: isMetContCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: PwmRotation
Attributes: 0
Operations: 4
DEBUG: Processing SpeedCalculator.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: SpeedCalculator
DEBUG: Added new class to extracted classes: SpeedCalculator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SpeedCalculator(double_targetSpeed)
DEBUG: Checking constructor/destructor: SpeedCalculator(double_targetSpeed)
DEBUG: Full declarator text: SpeedCalculator(double_targetSpeed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_targetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetSpeed
DEBUG: Added parameter - _targetSpeed : double
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Checking constructor/destructor: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Full declarator text: SpeedCalculator(double_rightTargetSpeed,double_leftTargetSpeed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_rightTargetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _rightTargetSpeed
DEBUG: Added parameter - _rightTargetSpeed : double
DEBUG: Parameter context: double_leftTargetSpeed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _leftTargetSpeed
DEBUG: Added parameter - _leftTargetSpeed : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateRightMotorPwmFromTargetSpeed()
DEBUG: Processing method: calculateRightMotorPwmFromTargetSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator: calculateRightMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateRightMotorPwmFromTargetSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: calculateRightMotorPwmFromTargetSpeed
DEBUG: Adding operation: calculateRightMotorPwmFromTargetSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: Processing method: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator: calculateLeftMotorPwmFromTargetSpeed()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateLeftMotorPwmFromTargetSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: Operation completed: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Adding operation: calculateLeftMotorPwmFromTargetSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   const double leftTargetSpeed;

DEBUG: Processing member declaration
Found comment line:   Pid rightPid;

DEBUG: Processing member declaration
Found comment line:   Pid leftPid;

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: Processing method: calculateSpeed
DEBUG: Return type: double
DEBUG: Modifiers: []
DEBUG: Declarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: NoPointerDeclarator: calculateSpeed(doublediffMileage,doublediffTime)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - calculateSpeed
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (doublediffMileage,doublediffTime)
DEBUG: Found ParametersAndQualifiers: (doublediffMileage,doublediffTime)
DEBUG: Found ParameterDeclarationClause: doublediffMileage,doublediffTime
doublediffMileage
doublediffTime
DEBUG: Operation added to class. Current operation count: 5
DEBUG: Operation completed: calculateSpeed
DEBUG: Adding operation: calculateSpeed
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: SpeedCalculator
Attributes: 17
Operations: 5
DEBUG: Processing StringOperator.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: StringOperator
DEBUG: Added new class to extracted classes: StringOperator
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: *removeEOL(constchar*string)
DEBUG: Processing method: *removeEOL
DEBUG: Return type: char
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: *removeEOL(constchar*string)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: *removeEOL(constchar*string)
DEBUG: NoPointerDeclarator: removeEOL(constchar*string)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - removeEOL
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (constchar*string)
DEBUG: Found ParametersAndQualifiers: (constchar*string)
DEBUG: Found ParameterDeclarationClause: constchar*string
constchar*string
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: *removeEOL
DEBUG: Adding operation: *removeEOL
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Checking constructor/destructor: StringOperator()
DEBUG: Full declarator text: StringOperator()
DEBUG: Processing parameters
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: StringOperator
Attributes: 0
Operations: 2
DEBUG: Processing AreaACameraAction.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: AreaACameraAction
DEBUG: Added new class to extracted classes: AreaACameraAction
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Checking constructor/destructor: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Full declarator text: AreaACameraAction(int_position,bool_isClockwise,int_preTargetAngle,int_postTargetAngle,int_rotationPwm,double_targetDistance,double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: int_position
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _position
DEBUG: Added parameter - _position : int
DEBUG: Parameter context: bool_isClockwise
DEBUG: Parameter type raw: bool
DEBUG: Parameter declarator: _isClockwise
DEBUG: Added parameter - _isClockwise : bool
DEBUG: Parameter context: int_preTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _preTargetAngle
DEBUG: Added parameter - _preTargetAngle : int
DEBUG: Parameter context: int_postTargetAngle
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _postTargetAngle
DEBUG: Added parameter - _postTargetAngle : int
DEBUG: Parameter context: int_rotationPwm
DEBUG: Parameter type raw: int
DEBUG: Parameter declarator: _rotationPwm
DEBUG: Added parameter - _rotationPwm : int
DEBUG: Parameter context: double_targetDistance
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _targetDistance
DEBUG: Added parameter - _targetDistance : double
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: []
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ override;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [OVERRIDE]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierOVERRIDE
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   int flag;  // 撮影を行うかどうかを確認するフラグ

DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: AreaACameraAction
Attributes: 9
Operations: 4
DEBUG: Processing EtRobocon2024.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: EtRobocon2024
DEBUG: Added new class to extracted classes: EtRobocon2024
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: start()
DEBUG: Processing method: start
DEBUG: Return type: void
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: start()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: start()
DEBUG: NoPointerDeclarator: start()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - start
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 1
DEBUG: ModifierSTATIC
DEBUG: Operation completed: start
DEBUG: Adding operation: start
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: private
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: sigint(int_)
DEBUG: Processing method: sigint
DEBUG: Return type: void
DEBUG: Modifiers: [STATIC]
DEBUG: Declarator: sigint(int_)
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: sigint(int_)
DEBUG: NoPointerDeclarator: sigint(int_)
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - sigint
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - (int_)
DEBUG: Found ParametersAndQualifiers: (int_)
DEBUG: Found ParameterDeclarationClause: int_
int_
DEBUG: Operation added to class. Current operation count: 2
DEBUG: ModifierSTATIC
DEBUG: Operation completed: sigint
DEBUG: Adding operation: sigint
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: EtRobocon2024
Attributes: 0
Operations: 2
DEBUG: Processing Straight.h
DEBUG: Starting C++ code analysis
DEBUG: Entering class specifier
DEBUG: Created class: Straight
DEBUG: Added new class to extracted classes: Straight
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing access specifier
DEBUG: Visibility changed to: public
DEBUG: Processing member declaration
DEBUG: Checking constructor/destructor: Straight(double_speed)
DEBUG: Checking constructor/destructor: Straight(double_speed)
DEBUG: Full declarator text: Straight(double_speed)
DEBUG: Processing parameters
DEBUG: Parameter context: double_speed
DEBUG: Parameter type raw: double
DEBUG: Parameter declarator: _speed
DEBUG: Added parameter - _speed : double
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: run()
DEBUG: Processing method: run
DEBUG: Return type: void
DEBUG: Modifiers: []
DEBUG: Declarator: run()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: run()
DEBUG: NoPointerDeclarator: run()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - run
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 2
DEBUG: Operation completed: run
DEBUG: Adding operation: run
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: isMetPreCondition()
DEBUG: Processing method: isMetPreCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: isMetPreCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator: isMetPreCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetPreCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 3
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: isMetPreCondition
DEBUG: Adding operation: isMetPreCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ =0;
DEBUG: Full declarator text: isMetContinuationCondition()
DEBUG: Processing method: isMetContinuationCondition
DEBUG: Return type: bool
DEBUG: Modifiers: [VIRTUAL, PURE_VIRTUAL]
DEBUG: Declarator: isMetContinuationCondition()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator: isMetContinuationCondition()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - isMetContinuationCondition
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 4
DEBUG: ModifierVIRTUAL
DEBUG: ModifierPURE_VIRTUAL
DEBUG: Operation completed: isMetContinuationCondition
DEBUG: Adding operation: isMetContinuationCondition
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing member declaration
nameWithScope！！ ;
DEBUG: Full declarator text: logRunning()
DEBUG: Processing method: logRunning
DEBUG: Return type: void
DEBUG: Modifiers: [VIRTUAL]
DEBUG: Declarator: logRunning()
DEBUG: Declarator class: io.github.morichan.retuss.parser.cpp.CPP14Parser$DeclaratorContext
DEBUG: PointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator: logRunning()
DEBUG: NoPointerDeclarator methods: 
 - accept
 - declaratorid
 - constantExpression
 - pointerDeclarator
 - exitRule
 - enterRule
 - getRuleIndex
 - attributeSpecifierSeq
 - parametersAndQualifiers
 - noPointerDeclarator
 - LeftParen
 - RightParen
 - LeftBracket
 - RightBracket
 - getParent
 - getParent
 - getParent
 - getParent
 - copyFrom
 - getStart
 - getChild
 - getChild
 - getChild
 - getChildCount
 - getSourceInterval
 - getTokens
 - getStop
 - addAnyChild
 - getRuleContexts
 - getRuleContext
 - removeLastChild
 - addErrorNode
 - addErrorNode
 - toInfoString
 - getToken
 - addChild
 - addChild
 - addChild
 - toString
 - toString
 - toString
 - toString
 - toString
 - isEmpty
 - depth
 - setParent
 - getText
 - toStringTree
 - toStringTree
 - toStringTree
 - getPayload
 - getPayload
 - setAltNumber
 - getAltNumber
 - getRuleContext
 - wait
 - wait
 - wait
 - equals
 - hashCode
 - getClass
 - notify
 - notifyAll
DEBUG: Child 0: io.github.morichan.retuss.parser.cpp.CPP14Parser$NoPointerDeclaratorContext - logRunning
DEBUG: Child 1: io.github.morichan.retuss.parser.cpp.CPP14Parser$ParametersAndQualifiersContext - ()
DEBUG: Found ParametersAndQualifiers: ()
DEBUG: Operation added to class. Current operation count: 5
DEBUG: ModifierVIRTUAL
DEBUG: Operation completed: logRunning
DEBUG: Adding operation: logRunning
DEBUG: Is constructor: false
DEBUG: Is destructor: false
DEBUG: Processing access specifier
DEBUG: Visibility changed to: protected
DEBUG: Processing member declaration
DEBUG: Processing member declaration
DEBUG: Processing member declaration
Found comment line:   double initialDistance;  // 初期走行距離

DEBUG: Exiting class specifier
DEBUG: Completed C++ code analysis
DEBUG: Extracted 1 classes

Class: Straight
Attributes: 3
Operations: 5
DEBUG: Updating diagram
DEBUG: Refresh completed
DEBUG: selectedClassName = PidGain
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: Processing C++ file: SystemInfo.h
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain #90EE90 {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid #ADD8E6 {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing #ADD8E6 {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing #ADD8E6 {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain #90EE90 {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid #ADD8E6 {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: Processing C++ file: ColorLineTracing.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: StopWheelsMotor.h
DEBUG: Processing C++ file: PidGain.h
DEBUG: Processing C++ file: Area.h
DEBUG: Processing C++ file: Logger.h
DEBUG: Processing C++ file: LineTracing.h
DEBUG: Processing C++ file: Measurer.h
DEBUG: Processing C++ file: EdgeChanging.h
DEBUG: Processing C++ file: DistanceLineTracing.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: Processing C++ file: CompositeMotion.h
DEBUG: Processing C++ file: CameraAction.h
DEBUG: Processing C++ file: COMMAND.h
DEBUG: Processing C++ file: COLOR.h
DEBUG: Processing C++ file: ColorStraight.h
DEBUG: Processing C++ file: Motion.h
DEBUG: Processing C++ file: Calibrator.h
DEBUG: Processing C++ file: RunLogger.h
DEBUG: Processing C++ file: Mileage.h
DEBUG: Processing C++ file: ResetWheelsMotorPwm.h
DEBUG: Processing C++ file: AreaBCameraAction.h
DEBUG: Processing C++ file: PidGain.h
DEBUG: Processing C++ file: Controller.h
DEBUG: Processing C++ file: Rotation.h
DEBUG: Processing C++ file: DistanceStraight.h
DEBUG: Processing C++ file: Area.h
DEBUG: Processing C++ file: ColorDistanceLineTracing.h
DEBUG: Processing C++ file: Timer.h
DEBUG: Processing C++ file: Sleeping.h
DEBUG: Processing C++ file: CorrectingRotation.h
DEBUG: Processing C++ file: PwmRotation.h
DEBUG: Processing C++ file: SpeedCalculator.h
DEBUG: Processing C++ file: StringOperator.h
DEBUG: Processing C++ file: AreaACameraAction.h
DEBUG: Processing C++ file: EtRobocon2024.h
DEBUG: Processing C++ file: Straight.h
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
Restored scroll position - X: 5528.0, Y: 400.0
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 1.00
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain #90EE90 {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid #ADD8E6 {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing #ADD8E6 {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing #ADD8E6 {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain #90EE90 {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid #ADD8E6 {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 5528.0, Y: 400.0
Restored scroll position - X: 5528.0, Y: 400.0
DEBUG: selectedClassName = Straight
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.99
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 6757.0, Y: 0.0
DEBUG: selectedClassName = Straight
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
Restored scroll position - X: 6757.0, Y: 0.0
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.64
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
Saving scroll position - X: 6757.0, Y: 0.0
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.46
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

Restored scroll position - X: 6757.0, Y: 0.0
DEBUG: CppClassDiagramDrawer draw completed
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
Saving scroll position - X: 5533.0, Y: 0.0
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.46
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

Restored scroll position - X: 5533.0, Y: 0.0
DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 4280.0, Y: 0.0
Restored scroll position - X: 4280.0, Y: 0.0
DEBUG: selectedClassName = Straight
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.47
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 4177.0, Y: 0.0
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
Restored scroll position - X: 4177.0, Y: 0.0
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.50
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 4177.0, Y: 0.0
Restored scroll position - X: 4177.0, Y: 0.0
DEBUG: selectedClassName = Straight
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.48
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 4734.0, Y: 0.0
CppModel classes: 49
  Class: SystemInfo
  Attributes: []
  Operations: [+ SystemInfo() : void, + ~SystemInfo() : void]
  Relations: 
  Class: ColorLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
    COLOR (DEPENDENCY_PARAMETER)
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: StopWheelsMotor
  Attributes: [- controller : Controller]
  Operations: [+ StopWheelsMotor() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
    Controller (COMPOSITION)
      - controller [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
Restored scroll position - X: 4734.0, Y: 0.0
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: Logger
  Attributes: []
  Operations: [+ Logger() : void, + log(logMessage : char) : void, + logWarning(warningMessage : char) : void, + logError(errorMessage : char) : void, + logHighlight(highlightLog : char) : void, + outputToFile() : void, + initLogs() : void]
  Relations: 
  Class: LineTracing
  Attributes: [# targetSpeed : double, # targetBrightness : int, # pidGain : PidGain, # isLeftEdge : bool&, # initLeftMileage : double, # initRightMileage : double, # initDistance : double, # timer : Timer]
  Operations: [+ LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, + run() : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    PidGain (DEPENDENCY_PARAMETER)
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Measurer
  Attributes: [- colorSensor : ColorSensor, - sonarSensor : SonarSensor, - leftWheel : Motor, - rightWheel : Motor, - armMotor : Motor]
  Operations: [+ Measurer() : void, + getBrightness() : int, + getRawColor() : rgb_raw_t, + getLeftCount() : int, + getRightCount() : int, + getArmMotorCount() : int, + getLeftButton() : bool, + getRightButton() : bool, + getEnterButton() : bool, + getForwardDistance() : int, + getVoltage() : double]
  Relations: 
    ColorSensor (COMPOSITION)
      - colorSensor [1]
    Motor (COMPOSITION)
      - leftWheel [1]
    SonarSensor (COMPOSITION)
      - sonarSensor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    rgb_raw_t (DEPENDENCY_USE)
  Class: EdgeChanging
  Attributes: [- isLeftEdge : bool&, - nextEdge : bool]
  Operations: [+ EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool) : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: DistanceLineTracing
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    LineTracing (INHERITANCE)
    PidGain (DEPENDENCY_PARAMETER)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: CompositeMotion
  Attributes: []
  Operations: [+ CompositeMotion() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: CameraAction
  Attributes: [- subject : Subject, - countShootFigure : int]
  Operations: [+ CameraAction(_subject : Subject) : void, + run() : void, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    Subject (COMPOSITION)
      - subject [1]
    Subject (DEPENDENCY_PARAMETER)
  Class: Subject
  Attributes: []
  Operations: []
  Relations: 
  Class: COMMAND
  Attributes: []
  Operations: []
  Relations: 
  Class: MotionParser
  Attributes: []
  Operations: [+ createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>, - MotionParser() : void, - convertCommand(str : char) : COMMAND, - convertBool(command : char, stringParameter : char) : bool, - convertSubject(stringParameter : char) : CameraAction::Subject]
  Relations: 
    COMMAND (DEPENDENCY_USE)
    Subject (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
    Motion (DEPENDENCY_USE)
  Class: COLOR
  Attributes: []
  Operations: []
  Relations: 
  Class: Hsv
  Attributes: [- hue : int, - saturation : int, - value : int]
  Operations: []
  Relations: 
  Class: ColorJudge
  Attributes: [- SATURATION_BORDER : int = 27, - BLACK_LIMIT_BORDER : int = 10, - WHITE_LIMIT_BORDER : int = 250, - BLACK_BORDER : int = 110, - RED_BORDER : int = 25, - YELLOW_BORDER : int = 50, - GREEN_BORDER : int = 170, - BLUE_BORDER : int = 300, - MAX_RGB : rgb_raw_t = {244,245,252}, - MIN_RGB : rgb_raw_t = {9,10,10}]
  Operations: [+ getColor(rgb : rgb_raw_t) : COLOR, + stringToColor(str : char) : COLOR, + colorToString(color : COLOR) : char*, - convertRgbToHsv(rgb : rgb_raw_t) : Hsv]
  Relations: 
    rgb_raw_t (COMPOSITION)
      - MAX_RGB [1]
    rgb_raw_t (COMPOSITION)
      - MIN_RGB [1]
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    Hsv (DEPENDENCY_USE)
    COLOR (DEPENDENCY_USE)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    rgb_raw_t (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
  Class: ColorStraight
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR]
  Operations: [+ ColorStraight(_targetColor : COLOR, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
    COLOR (COMPOSITION)
      - targetColor [1]
    COLOR (DEPENDENCY_PARAMETER)
  Class: Motion
  Attributes: [# logger : Logger, # runLogger : RunLogger]
  Operations: [+ Motion() : void, + run() : void, + logRunning() : void]
  Relations: 
    RunLogger (COMPOSITION)
      - runLogger [1]
    Logger (COMPOSITION)
      - logger [1]
  Class: Calibrator
  Attributes: [- isLeftCourse : bool, - targetBrightness : int, - timer : Timer, - measurer : Measurer*]
  Operations: [+ Calibrator() : void, + run() : void, + waitForStart() : void, + getIsLeftCourse() : bool, + getTargetBrightness() : int, - selectAndSetCourse() : void, - measureAndSetTargetBrightness() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Measurer (ASSOCIATION)
      - measurer [0..1]
  Class: RunLogger
  Attributes: []
  Operations: [+ RunLogger() : void, + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void, + outputToFile() : void, + initRunLogs() : void]
  Relations: 
  Class: Mileage
  Attributes: []
  Operations: [+ calculateWheelMileage(angle : int) : double, + calculateMileage(rightAngle : int, leftAngle : int) : double, - Mileage() : void]
  Relations: 
  Class: ResetWheelsMotorPwm
  Attributes: []
  Operations: [+ ResetWheelsMotorPwm() : void, + run() : void, + logRunning() : void]
  Relations: 
    Motion (INHERITANCE)
  Class: AreaBCameraAction
  Attributes: [- preTargetAngle : int, - prePwm : int, - isClockwise : bool, - pwmXr : int, - postTargetAngle : int, - postPwm : int, - correctionTolerance : int = 10, - colorXr : COLOR = COLOR::YELLOW]
  Operations: [+ AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    CompositeMotion (REALIZATION)
    COLOR (COMPOSITION)
      - colorXr [1]
  Class: PidGain
  Attributes: [+ kp : double, + ki : double, + kd : double]
  Operations: [+ PidGain(_kp : double, _ki : double, _kd : double) : void]
  Relations: 
  Class: Pid
  Attributes: [- pidGain : PidGain, - prevDeviation : double, - integral : double, - filteredDerivative : double = 0, - targetValue : double]
  Operations: [+ Pid(_kp : double, _ki : double, _kd : double, _targetValue : double) : void, + setPidGain(_kp : double, _ki : double, _kd : double) : void, + calculatePid(currentValue : double, delta : double) : double]
  Relations: 
    PidGain (COMPOSITION)
      - pidGain [1]
  Class: Controller
  Attributes: [+ MOTOR_PWM_MAX : double = 100.0, + MOTOR_PWM_MIN : double = -100.0, - rightWheel : Motor, - leftWheel : Motor, - armMotor : Motor, - pwmOfRightWheel : double, - pwmOfLeftWheel : double, - pwmOfArm : double]
  Operations: [+ Controller() : void, + setRightMotorPwm(pwm : double) : void, + setLeftMotorPwm(pwm : double) : void, + resetRightMotorPwm() : void, + resetLeftMotorPwm() : void, + resetWheelsMotorPwm() : void, + stopWheelsMotor() : void, + setArmMotorPwm(pwm : double) : void, + resetArmMotorPwm() : void, + stopArmMotor() : void, + getRightMotorPwm() : double, + getLeftMotorPwm() : double, - limitPwmValue(inputPwm : double) : double]
  Relations: 
    Motor (COMPOSITION)
      - leftWheel [1]
    Motor (COMPOSITION)
      - armMotor [1]
    Motor (COMPOSITION)
      - rightWheel [1]
  Class: Rotation
  Attributes: [# targetAngle : int, # pwm : int, # isClockwise : bool, # timer : Timer]
  Operations: [+ Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + run() : void, + isMetPreCondition() : bool, + isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: DistanceStraight
  Attributes: [- targetDistance : double]
  Operations: [+ DistanceStraight(_targetDiatance : double, _speed : double) : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Straight (INHERITANCE)
  Class: Area
  Attributes: []
  Operations: []
  Relations: 
  Class: AreaMaster
  Attributes: [- isLeftCourse : bool, - isLeftEdge : bool, - targetBrightness : int, - basePath : char* = "etrobocon2024/datafiles/"]
  Operations: [+ AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int) : void, + run() : void]
  Relations: 
    Area (DEPENDENCY_PARAMETER)
  Class: ColorDistanceLineTracing
  Attributes: [- JUDGE_COUNT : int = 3, - colorCount : int = 0, - targetColor : COLOR, - targetDistance : double]
  Operations: [+ ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&) : void, # isMetPreCondition(targetSpeed : double) : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - targetColor [1]
    PidGain (DEPENDENCY_PARAMETER)
    COLOR (DEPENDENCY_PARAMETER)
    LineTracing (INHERITANCE)
  Class: Timer
  Attributes: [- clock : Clock]
  Operations: [+ Timer() : void, + sleep(milliSec : int) : void, + now() : int]
  Relations: 
    Clock (COMPOSITION)
      - clock [1]
  Class: Sleeping
  Attributes: [- milliSec : int, - timer : Timer]
  Operations: [+ Sleeping(milliSec : int) : void, + run() : void, + logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
  Class: CorrectingRotation
  Attributes: [- pwm : int, - correctionAngle : int = 0, - color : COLOR, - isClockwise : bool, - correctionTolerance : int]
  Operations: [+ CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR) : void, + run() : void, + getCorrectionAngle() : int, + logRunning() : void]
  Relations: 
    COLOR (COMPOSITION)
      - color [1]
    COLOR (DEPENDENCY_PARAMETER)
    CompositeMotion (REALIZATION)
  Class: PwmRotation
  Attributes: []
  Operations: [+ PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool) : void, + isMetPreCondition() : bool, + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool, + logRunning() : void]
  Relations: 
    Rotation (INHERITANCE)
  Class: SpeedCalculator
  Attributes: [- rightTargetSpeed : double, - leftTargetSpeed : double, - rightPid : Pid, - leftPid : Pid, - timer : Timer, - rightMotorPwm : double, - leftMotorPwm : double, - prevRightMileage : double, - prevLeftMileage : double, - prevRightTime : int, - prevLeftTime : int, - K_P : double = 0.004, - K_I : double = 0.0000005, - K_D : double = 0.0007, - R_K_P : double = 0.004, - R_K_I : double = 0.0000005, - R_K_D : double = 0.0007]
  Operations: [+ SpeedCalculator(_targetSpeed : double) : void, + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double) : void, + calculateRightMotorPwmFromTargetSpeed() : double, + calculateLeftMotorPwmFromTargetSpeed() : double, - calculateSpeed(diffMileage : double, diffTime : double) : double]
  Relations: 
    Pid (COMPOSITION)
      - leftPid [1]
    Pid (COMPOSITION)
      - rightPid [1]
    Timer (COMPOSITION)
      - timer [1]
  Class: StringOperator
  Attributes: []
  Operations: [+ removeEOL(string : char) : char*, - StringOperator() : void]
  Relations: 
  Class: AreaACameraAction
  Attributes: [- flag : int, - subject : Subject = CameraAction::Subject::FIGURE, - isClockwise : bool, - preTargetAngle : int, - postTargetAngle : int, - rotationPwm : int, - targetDistance : double, - targetSpeed : double, - ETROBO_PATH : char* = "./etrobocon2024/"]
  Operations: [+ AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double) : void, + run() : void, + isMetPreCondition() : bool, + logRunning() : void]
  Relations: 
    Subject (COMPOSITION)
      - subject [1]
    CompositeMotion (REALIZATION)
  Class: EtRobocon2024
  Attributes: []
  Operations: [+ start() : void, - sigint(_ : int) : void]
  Relations: 
  Class: Straight
  Attributes: [# targetSpeed : double, # initialDistance : double, # timer : Timer]
  Operations: [+ Straight(_speed : double) : void, + run() : void, # isMetPreCondition() : bool, # isMetContinuationCondition() : bool, # logRunning() : void]
  Relations: 
    Timer (COMPOSITION)
      - timer [1]
    Motion (INHERITANCE)
DEBUG: CppClassDiagramDrawer - Number of classes: 49
Generated PlantUML:
@startuml
 skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam LineThickness 1.5
hide empty members
skinparam enumBackgroundColor White
skinparam enumBorderColor Black
scale 0.29
class SystemInfo {
  + SystemInfo()
  + {virtual} ~SystemInfo()
}

class ColorLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorLineTracing(_targetColor : COLOR, _targetSpeed : double, _targetBrightness : int, _gain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorLineTracing *-- "1" COLOR : -targetColor
ColorLineTracing ..> COLOR : <<parameter>>
ColorLineTracing ..> PidGain : <<parameter>>
ColorLineTracing --|> LineTracing
enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
class StopWheelsMotor {
  - controller : Controller
  + StopWheelsMotor()
  + run() : void
  + logRunning() : void
}

StopWheelsMotor *-- "1" Controller : -controller
StopWheelsMotor --|> Motion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class Logger {
  + Logger()
  + log(logMessage : char) : void
  + logWarning(warningMessage : char) : void
  + logError(errorMessage : char) : void
  + logHighlight(highlightLog : char) : void
  + outputToFile() : void
  + initLogs() : void
}

abstract class LineTracing {
  # targetSpeed : double
  # targetBrightness : int
  # pidGain : PidGain
  # isLeftEdge : bool&
  # initLeftMileage : double
  # initRightMileage : double
  # initDistance : double
  # timer : Timer
  + LineTracing(_targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  + run() : void
  # {virtual} {abstract} isMetPreCondition(targetSpeed : double) : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

LineTracing *-- "1" Timer : #timer
LineTracing *-- "1" PidGain : #pidGain
LineTracing ..> PidGain : <<parameter>>
LineTracing --|> Motion
class Measurer {
  - colorSensor : ColorSensor
  - sonarSensor : SonarSensor
  - leftWheel : Motor
  - rightWheel : Motor
  - armMotor : Motor
  + Measurer()
  + getBrightness() : int
  + getRawColor() : rgb_raw_t
  + getLeftCount() : int
  + getRightCount() : int
  + getArmMotorCount() : int
  + getLeftButton() : bool
  + getRightButton() : bool
  + getEnterButton() : bool
  + getForwardDistance() : int
  + getVoltage() : double
}

Measurer *-- "1" ColorSensor : -colorSensor
Measurer *-- "1" Motor : -leftWheel
Measurer *-- "1" SonarSensor : -sonarSensor
Measurer *-- "1" Motor : -rightWheel
Measurer *-- "1" Motor : -armMotor
Measurer ..> rgb_raw_t : <<use>>
class EdgeChanging {
  - isLeftEdge : bool&
  - nextEdge : bool
  + EdgeChanging(_isLeftEdge : bool&, _nextEdge : bool)
  + run() : void
  + logRunning() : void
}

EdgeChanging --|> Motion
class DistanceLineTracing {
  - targetDistance : double
  + DistanceLineTracing(_targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

DistanceLineTracing ..> PidGain : <<parameter>>
DistanceLineTracing --|> LineTracing
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
interface CompositeMotion {
  + CompositeMotion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

CompositeMotion --|> Motion
class CameraAction {
  - subject : Subject
  - {static} countShootFigure : int
  + CameraAction(_subject : Subject)
  + run() : void <<override>>
  + logRunning() : void <<override>>
}

CameraAction *-- "1" Subject : -subject
CameraAction ..> Subject : <<parameter>>
CameraAction ..|> CompositeMotion
enum Subject {
  FIGURE
  PLARAIL
  UNDEFINED
}

enum COMMAND {
  DL
  CL
  CD
  DS
  CS
  PR
  DT
  EC
  SL
  AU
  AD
  RM
  SM
  CA
  AC
  BC
  XR
  NONE
}

class MotionParser {
  + {static} createMotions(filePath : char, targetBrightness : int, isLeftEdge : bool) : Vector<Motion*>
  - MotionParser()
  - {static} convertCommand(str : char) : COMMAND
  - {static} convertBool(command : char, stringParameter : char) : bool
  - {static} convertSubject(stringParameter : char) : CameraAction::Subject
}

MotionParser ..> Motion : <<use>>
MotionParser ..> COMMAND : <<use>>
MotionParser ..> Subject : <<use>>
enum COLOR {
  NONE = 0
  BLACK = 1
  WHITE = 2
  BLUE = 3
  GREEN = 4
  YELLOW = 5
  RED = 6
}

class Hsv {
  - hue : int
  - saturation : int
  - value : int
}

class ColorJudge {
  - {static} {readOnly} SATURATION_BORDER : int = 27
  - {static} {readOnly} BLACK_LIMIT_BORDER : int = 10
  - {static} {readOnly} WHITE_LIMIT_BORDER : int = 250
  - {static} {readOnly} BLACK_BORDER : int = 110
  - {static} {readOnly} RED_BORDER : int = 25
  - {static} {readOnly} YELLOW_BORDER : int = 50
  - {static} {readOnly} GREEN_BORDER : int = 170
  - {static} {readOnly} BLUE_BORDER : int = 300
  - {static} {readOnly} MAX_RGB : rgb_raw_t = {244,245,252}
  - {static} {readOnly} MIN_RGB : rgb_raw_t = {9,10,10}
  + {static} getColor(rgb : rgb_raw_t) : COLOR
  + {static} stringToColor(str : char) : COLOR
  + colorToString(color : COLOR) : char*
  - {static} convertRgbToHsv(rgb : rgb_raw_t) : Hsv
}

ColorJudge *-- "1" rgb_raw_t : -MAX_RGB
ColorJudge *-- "1" rgb_raw_t : -MIN_RGB
ColorJudge ..> COLOR : <<parameter, use>>
ColorJudge ..> Hsv : <<use>>
ColorJudge ..> rgb_raw_t : <<parameter>>
class ColorStraight #ADD8E6 {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  + ColorStraight(_targetColor : COLOR, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

ColorStraight *-- "1" COLOR : -targetColor
ColorStraight ..> COLOR : <<parameter>>
ColorStraight --|> Straight
abstract class Motion {
  # logger : Logger
  # runLogger : RunLogger
  + Motion()
  + {virtual} {abstract} run() : void
  + {virtual} {abstract} logRunning() : void
}

Motion *-- "1" RunLogger : #runLogger
Motion *-- "1" Logger : #logger
class Calibrator {
  - isLeftCourse : bool
  - targetBrightness : int
  - timer : Timer
  - measurer : Measurer*
  + Calibrator()
  + run() : void
  + waitForStart() : void
  + getIsLeftCourse() : bool
  + getTargetBrightness() : int
  - selectAndSetCourse() : void
  - measureAndSetTargetBrightness() : void
}

Calibrator *-- "1" Timer : -timer
Calibrator -- "0..1" Measurer : -measurer
class RunLogger {
  + RunLogger()
  + addToLogs(_Brightness : int, _RightPwm : int, _LeftPwm : int, _r : int, _g : int, _b : int) : void
  + outputToFile() : void
  + initRunLogs() : void
}

class Mileage {
  + {static} calculateWheelMileage(angle : int) : double
  + {static} calculateMileage(rightAngle : int, leftAngle : int) : double
  - Mileage()
}

class ResetWheelsMotorPwm {
  + ResetWheelsMotorPwm()
  + run() : void
  + logRunning() : void
}

ResetWheelsMotorPwm --|> Motion
class AreaBCameraAction {
  - preTargetAngle : int
  - prePwm : int
  - isClockwise : bool
  - pwmXr : int
  - postTargetAngle : int
  - postPwm : int
  - correctionTolerance : int = 10
  - colorXr : COLOR = COLOR::YELLOW
  + AreaBCameraAction(_preTargetAngle : int, _prePwm : int, _isClockwise : bool, _pwmXr : int, _postTargetAngle : int, _postPwm : int)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaBCameraAction *-- "1" COLOR : -colorXr
AreaBCameraAction ..|> CompositeMotion
class PidGain {
  + kp : double
  + ki : double
  + kd : double
  + PidGain(_kp : double, _ki : double, _kd : double)
}

class Pid {
  - pidGain : PidGain
  - prevDeviation : double
  - integral : double
  - filteredDerivative : double = 0
  - targetValue : double
  + Pid(_kp : double, _ki : double, _kd : double, _targetValue : double)
  + setPidGain(_kp : double, _ki : double, _kd : double) : void
  + calculatePid(currentValue : double, delta : double) : double
}

Pid *-- "1" PidGain : -pidGain
class Controller {
  + {static} {readOnly} MOTOR_PWM_MAX : double = 100.0
  + {static} {readOnly} MOTOR_PWM_MIN : double = -100.0
  - rightWheel : Motor
  - leftWheel : Motor
  - armMotor : Motor
  - {static} pwmOfRightWheel : double
  - {static} pwmOfLeftWheel : double
  - {static} pwmOfArm : double
  + Controller()
  + setRightMotorPwm(pwm : double) : void
  + setLeftMotorPwm(pwm : double) : void
  + resetRightMotorPwm() : void
  + resetLeftMotorPwm() : void
  + resetWheelsMotorPwm() : void
  + stopWheelsMotor() : void
  + setArmMotorPwm(pwm : double) : void
  + resetArmMotorPwm() : void
  + stopArmMotor() : void
  + {static} getRightMotorPwm() : double
  + {static} getLeftMotorPwm() : double
  - limitPwmValue(inputPwm : double) : double
}

Controller *-- "1" Motor : -leftWheel
Controller *-- "1" Motor : -armMotor
Controller *-- "1" Motor : -rightWheel
abstract class Rotation {
  # targetAngle : int
  # pwm : int
  # isClockwise : bool
  # timer : Timer
  + Rotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + run() : void
  + {virtual} {abstract} isMetPreCondition() : bool
  + {virtual} {abstract} isMetContCondition(targetLeftDistance : double, targetRightDistance : double, leftSign : int, rightSign : int) : bool
  + {virtual} {abstract} logRunning() : void
}

Rotation *-- "1" Timer : #timer
Rotation --|> Motion
class DistanceStraight #ADD8E6 {
  - targetDistance : double
  + DistanceStraight(_targetDiatance : double, _speed : double)
  # {virtual} isMetPreCondition() : bool <<override>>
  # {virtual} isMetContinuationCondition() : bool <<override>>
  # {virtual} logRunning() : void <<override>>
}

DistanceStraight --|> Straight
enum Area {
  LineTrace
  DoubleLoop
  DebrisRemoval
  SmartCarry
}

class AreaMaster {
  - isLeftCourse : bool
  - isLeftEdge : bool
  - targetBrightness : int
  - {readOnly} basePath : char* = "etrobocon2024/datafiles/"
  + AreaMaster(area : Area, isLeftCourse : bool, isLeftEdge : bool&, targetBrightness : int)
  + run() : void
}

AreaMaster ..> Area : <<parameter>>
class ColorDistanceLineTracing {
  - {static} {readOnly} JUDGE_COUNT : int = 3
  - colorCount : int = 0
  - targetColor : COLOR
  - targetDistance : double
  + ColorDistanceLineTracing(_targetColor : COLOR, _targetDistance : double, _targetSpeed : double, _targetBrightness : int, _pidGain : PidGain&, _isLeftEdge : bool&)
  # isMetPreCondition(targetSpeed : double) : bool <<override>>
  # isMetContinuationCondition() : bool <<override>>
  # logRunning() : void <<override>>
}

ColorDistanceLineTracing *-- "1" COLOR : -targetColor
ColorDistanceLineTracing ..> COLOR : <<parameter>>
ColorDistanceLineTracing ..> PidGain : <<parameter>>
ColorDistanceLineTracing --|> LineTracing
class Timer {
  - clock : Clock
  + Timer()
  + sleep(milliSec : int) : void
  + now() : int
}

Timer *-- "1" Clock : -clock
class Sleeping {
  - milliSec : int
  - timer : Timer
  + Sleeping(milliSec : int)
  + run() : void
  + logRunning() : void
}

Sleeping *-- "1" Timer : -timer
Sleeping --|> Motion
class CorrectingRotation {
  - pwm : int
  - correctionAngle : int = 0
  - color : COLOR
  - isClockwise : bool
  - correctionTolerance : int
  + CorrectingRotation(_pwm : int, _correctionTolerance : int, _color : COLOR)
  + run() : void <<override>>
  + getCorrectionAngle() : int
  + logRunning() : void <<override>>
}

CorrectingRotation *-- "1" COLOR : -color
CorrectingRotation ..> COLOR : <<parameter>>
CorrectingRotation ..|> CompositeMotion
class PwmRotation {
  + PwmRotation(_targetAngle : int, _pwm : int, _isClockwise : bool)
  + isMetPreCondition() : bool <<override>>
  + isMetContCondition(initLeftMileage : double, initRightMileage : double, leftSign : int, rightSign : int) : bool <<override>>
  + logRunning() : void <<override>>
}

PwmRotation --|> Rotation
class SpeedCalculator {
  - {readOnly} rightTargetSpeed : double
  - {readOnly} leftTargetSpeed : double
  - rightPid : Pid
  - leftPid : Pid
  - timer : Timer
  - rightMotorPwm : double
  - leftMotorPwm : double
  - prevRightMileage : double
  - prevLeftMileage : double
  - prevRightTime : int
  - prevLeftTime : int
  - {static} {readOnly} K_P : double = 0.004
  - {static} {readOnly} K_I : double = 0.0000005
  - {static} {readOnly} K_D : double = 0.0007
  - {static} {readOnly} R_K_P : double = 0.004
  - {static} {readOnly} R_K_I : double = 0.0000005
  - {static} {readOnly} R_K_D : double = 0.0007
  + SpeedCalculator(_targetSpeed : double)
  + SpeedCalculator(_rightTargetSpeed : double, _leftTargetSpeed : double)
  + calculateRightMotorPwmFromTargetSpeed() : double
  + calculateLeftMotorPwmFromTargetSpeed() : double
  - calculateSpeed(diffMileage : double, diffTime : double) : double
}

SpeedCalculator *-- "1" Pid : -leftPid
SpeedCalculator *-- "1" Pid : -rightPid
SpeedCalculator *-- "1" Timer : -timer
class StringOperator {
  + removeEOL(string : char) : char*
  - StringOperator()
}

class AreaACameraAction {
  - flag : int
  - subject : Subject = CameraAction::Subject::FIGURE
  - isClockwise : bool
  - preTargetAngle : int
  - postTargetAngle : int
  - rotationPwm : int
  - targetDistance : double
  - targetSpeed : double
  - {readOnly} ETROBO_PATH : char* = "./etrobocon2024/"
  + AreaACameraAction(_position : int, _isClockwise : bool, _preTargetAngle : int, _postTargetAngle : int, _rotationPwm : int, _targetDistance : double, _speed : double)
  + run() : void <<override>>
  + isMetPreCondition() : bool
  + logRunning() : void <<override>>
}

AreaACameraAction *-- "1" Subject : -subject
AreaACameraAction ..|> CompositeMotion
class EtRobocon2024 {
  + {static} start() : void
  - {static} sigint(_ : int) : void
}

abstract class Straight #90EE90 {
  # targetSpeed : double
  # initialDistance : double
  # timer : Timer
  + Straight(_speed : double)
  + run() : void
  # {virtual} isMetPreCondition() : bool
  # {virtual} {abstract} isMetContinuationCondition() : bool
  # {virtual} logRunning() : void
}

Straight *-- "1" Timer : #timer
Straight --|> Motion
@enduml

DEBUG: CppClassDiagramDrawer draw completed
Saving scroll position - X: 4508.0, Y: 0.0
Restored scroll position - X: 4508.0, Y: 0.0
