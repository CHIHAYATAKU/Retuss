static const int c;
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (storageClassSpecifier static)) (declSpecifier (typeSpecifier (trailingTypeSpecifier (cvQualifier const)))) (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier int))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId c)))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)

static const std::vector<Animal> g;
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier int))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId a)))))))) ;) (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (cvQualifier const)))) (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier int))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId b)))))))) ;) (memberdeclaration (declSpecifierSeq (declSpecifier (storageClassSpecifier static)) (declSpecifier (typeSpecifier (trailingTypeSpecifier (cvQualifier const)))) (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (nestedNameSpecifier (theTypeName (className std)) ::) (theTypeName (className (simpleTemplateId (templateName vector) < (templateArgumentList (templateArgument (theTypeId (typeSpecifierSeq (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className Animal))))))))) >)))))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId g)))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)

vector<Type> v(n, d);
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className (simpleTemplateId (templateName vector) < (templateArgumentList (templateArgument (theTypeId (typeSpecifierSeq (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className Type))))))))) >)))))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId v)))) (parametersAndQualifiers ( (parameterDeclarationClause (parameterDeclarationList (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className n)))))))) , (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className d)))))))))) ))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)

vector<vector<Type>> vv;
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className (simpleTemplateId (templateName vector) < (templateArgumentList (templateArgument (theTypeId (typeSpecifierSeq (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className Type))))))))) >)))))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId v)))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)

list<Animal> a(int a, char c);
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className (simpleTemplateId (templateName list) < (templateArgumentList (templateArgument (theTypeId (typeSpecifierSeq (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className Animal))))))))) >)))))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId a)))) (parametersAndQualifiers ( (parameterDeclarationClause (parameterDeclarationList (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier int))))) (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId a))))))) , (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier char))))) (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId c))))))))) ))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)

void a(int a, Animal t);
(translationUnit (declarationseq (declaration (blockDeclaration (simpleDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (classSpecifier (classHead (classKey class) (classHeadName (className A))) { (memberSpecification (accessSpecifier public) : (memberdeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier void))))) (memberDeclaratorList (memberDeclarator (declarator (pointerDeclarator (noPointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId a)))) (parametersAndQualifiers ( (parameterDeclarationClause (parameterDeclarationList (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier int))))) (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId a))))))) , (parameterDeclaration (declSpecifierSeq (declSpecifier (typeSpecifier (trailingTypeSpecifier (simpleTypeSpecifier (theTypeName (className Animal))))))) (declarator (pointerDeclarator (noPointerDeclarator (declaratorid (idExpression (unqualifiedId t))))))))) ))))))) ;) (accessSpecifier protected) : (accessSpecifier private) :) })))) ;)))) <EOF>)
